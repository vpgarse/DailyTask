<!DOCTYPE html>
<html>

<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<title>Order Item 4865952.1 ( 129 Hawthorne Ct )</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	<!--[if lt IE 9]>
        <script src="//navoss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="//oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

	<script src="/bundles/jQuery?v=9e0y_qDQFZGdW7fhFCpq3WSOpq4YntE8ab9_TE5zPTs1"></script>

	<script src="/bundles/addons?v=WXwPrOEmOaG34ytoiHtVaeGe7olOZyBUDKxVw78HJUs1"></script>

	<script src="/bundles/jqGrid?v=5C4FnIMoSYfgAnxV29uoFxqsn8_sv9wEV5h_mKWt-Lw1"></script>

	<script src="/bundles/bootstrap?v=WCBBVpzQC6Yf5LoTZsJKaAk0wNbVSSiGFHO70p73vbU1"></script>

	<script src="/bundles/clearvalue?v=ADGz1NEZL8kJgfTtOPY8MX8QQ0qteQk6MS_hiJLmtUE1"></script>

	<script src="/bundles/SignalRJs?v=y_4IpeeDdgoHqAhjqu2f3QsBnP-e4GuBLMt7WpNZnIM1"></script>

	<script src="/bundles/summernote?v=v2ZYRC1T9oToh6ErEv2raBTXN__zXQGi--_TKXYs9BQ1"></script>

	<script src="/signalr/hubs" type="text/javascript"></script>

	<link href="/content/summernote/bundle?v=3vO4wIybNjSXWSXzCI1vkTTkyiapTgfE949VFU3FLac1" rel="stylesheet" />

	<link href="/content/bootstrap/bundle?v=7QR_pl_dk7yMaUWGCNm-0kIf5_UIoMljLQRyUO1hDEI1" rel="stylesheet" />

	<link href="/content/jqgrid/bundle?v=vKT7m8lD6kms8mX8XMpg3YAtr9hat1H-4GiBh7Zby1g1" rel="stylesheet" />

	<link href="/content/css/bundle?v=6GGrQPWYkhlLz1Vn80Bm4Q0agC0RPHrRoImCxnbP8oE1" rel="stylesheet" />


</head>

<body class="mvc-site" onload="WaitOff();" onunload="WaitOn();">


	<table id="loaderContainer" onclick="return false;">
		<tr style="height: 25px">
			<td id="loaderContainerWH">
				<div id="loader">
					<table style="width: 100%">
						<tr style="height: 25px">
							<td>
								<p>
									<img src="/Content/Images/loading.gif" height="32" width="32" alt="" /><strong>
                                    Processing your request.<br />
                                    Please wait...
                                </strong>
								</p>
							</td>
						</tr>
					</table>
				</div>
			</td>
		</tr>
	</table>



	<div id="header">
		<!-- Application Header -->
		<div class="header">
			<table class="headerTables purple">
				<tr style="height: 30px">
					<td style="width: 15px"></td>
					<td>
						Acuity Administrative Portal (Version 4.6) &nbsp; &nbsp;

						<span class="badge badge-dark">testing-qa</span> </td>
					<td style="width: 250px; font-size: 10px; text-align: right">
						Logged in as: <b>SLambu</b> &nbsp;&nbsp;<a href="/Account/Logoff"><b>Log Out</b></a>
					</td>
					<td style="width: 8px"></td>
				</tr>
			</table>
		</div>

		<div class='cv-menu' style='padding-left: 40px; z-index: 1200;'>
			<ul class='menu'>
				<li name='Clients' class='menu-item '>
					<a href='/Clients/Search'>
						<img src='/Content/Images/building.png' />
						<span>Clients</span>
					</a>
				</li>
				<li class='spacer' style='width: 40px'>
					<img src='/Content/Images/spacer.gif'/>
		</li>
				<li name='Vendors' class='menu-item dropdown'>
					<a href='/Vendors/Search'>
						<img src='/Content/Images/vcard.png' />
						<span>Vendors</span>
					</a>
					<ul class='submenu' style='display: none;'>
						<li class='submenu-item '>
							<a href='/VendorFirms/Search'>
								<span>Firms</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Vendors/Search'>
								<span>Individual Agents</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Connect/Vendors/Search'>
								<span>CONNECT! Search</span>
							</a>
						</li>
					</ul>
				</li>
				<li class='spacer' style='width: 40px'>
					<img src='/Content/Images/spacer.gif'/>
		</li>
				<li name='Orders' class='menu-item dropdown'>
					<a href='/Orders/Search'>
						<img src='/Content/Images/cog.png' />
						<span>Orders</span>
					</a>
					<ul class='submenu' style='display: none;'>
						<li class='submenu-item '>
							<a href='/Orders/Create'>
								<span>Create New Order</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/Search'>
								<span>Search</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/Bulk/Create'>
								<span>Bulk Orders</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/Pipeline'>
								<span>Order Pipeline View</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/Allocations'>
								<span>User Allocation View</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/Teams'>
								<span>Individual & Team</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/Overdue'>
								<span>Overdue by Vendor</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Orders/UnhandledComments'>
								<span>Comments for Review</span>
							</a>
						</li>
					</ul>
				</li>
				<li class='spacer' style='width: 40px'>
					<img src='/Content/Images/spacer.gif'/>
		</li>
				<li name='Users' class='menu-item dropdown'>
					<a href='/Users'>
						<img src='/Content/Images/user.png' />
						<span>Users</span>
					</a>
					<ul class='submenu' style='display: none;'>
						<li class='submenu-item '>
							<a href='/Users'>
								<span>User List</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Employees/Teams'>
								<span>Teams</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Users/Roles'>
								<span>Security Roles</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Employees/Productivity'>
								<span>Productivity Metrics</span>
							</a>
						</li>
					</ul>
				</li>
				<li class='spacer' style='width: 40px'>
					<img src='/Content/Images/spacer.gif'/>
		</li>
				<li name='Configuration' class='menu-item dropdown'>
					<a href='#'>
						<img src='/Content/Images/table_edit.png' />
						<span>Configuration</span>
					</a>
					<ul class='submenu' style='display: none;'>
						<li class='submenu-item '>
							<a href='/Configuration/ApplicationSettings'>
								<span>Application Settings</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/StateLicenses'>
								<span>Appraisal Management Licenses</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/AutomatedForms'>
								<span>Automated Forms</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/Calendars'>
								<span>Calendars</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/CorrectionLists'>
								<span>Correction Lists</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/AutomatedRequestProviders'>
								<span>Data Sources</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/DocumentTemplates'>
								<span>Document Templates</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/EditableLists'>
								<span>Editable Lists</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Clients/ExclusionLists'>
								<span>Exclusion Lists</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/FeeSchedules'>
								<span>Fee Schedules</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/IntegrationUsers'>
								<span>Integration Users</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/Mappings'>
								<span>Integration Mappings</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/MortgageBrokerRegistration'>
								<span>Mortgage Broker Registration</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Workflow'>
								<span>Operational Workflow</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/BusinessEntities'>
								<span>People and Organizations</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/PredefinedComments'>
								<span>Predefined Comments</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/Products'>
								<span>Products</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/RevisionLists'>
								<span>Revision Lists</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/ScheduledTasks'>
								<span>Scheduled Tasks</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/TextTemplates'>
								<span>Text Templates</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/Integrations'>
								<span>System Integrations</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/VendorAssignment'>
								<span>Vendor Assignment</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Configuration/Qualifications'>
								<span>Vendor Qualifications</span>
							</a>
						</li>
					</ul>
				</li>
				<li class='spacer' style='width: 40px'>
					<img src='/Content/Images/spacer.gif'/>
		</li>
				<li name='Monitoring' class='menu-item dropdown'>
					<a href='#'>
						<img src='/Content/Images/computer.png' />
						<span>Monitoring</span>
					</a>
					<ul class='submenu' style='display: none;'>
						<li class='submenu-item '>
							<a href='/Monitoring/SystemLog'>
								<span>System Logging</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Monitoring/IntegrationLog'>
								<span>Integration Log</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a href='/Monitoring/NetworkServices'>
								<span>Automated Services</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a target=_'blank' href='https://vendortest.valuationconnect.com/elmah.axd'>
								<span>Vendor Portal Log</span>
							</a>
						</li>
						<li class='submenu-item '>
							<a target=_'blank' href='https://formstest.valuationconnect.com/elmah.axd'>
								<span>Forms Portal Log</span>
							</a>
						</li>
					</ul>
				</li>
				<li class='spacer' style='width: 40px'>
					<img src='/Content/Images/spacer.gif'/>
		</li>
				<li name='Reports' class='menu-item '>
					<a href='/Orders/Reports'>
						<img src='/Content/Images/chart_line.png' />
						<span>Reports</span>
					</a>
				</li>
			</ul>
			<div class='input-group quickSearch'> <input id='QuickSearchCriteria' class='form-control' name='QuickSearchCriteria' />
				<span class='input-group-btn'>			<button id='QuickSearchCriteriaBtn' class='btn btn-default ' type='button' onclick='quickSearch();'><i class='glyphicon glyphicon-search'></i></button>		</span>
			</div>
		</div>

		<div style="height: 5px; width: 100%; background-color: #ff6801">
		</div>
	</div>
	<script>
		function quickSearch() {
            $('#QuickSearchCriteria').blur();
            var quickSearchCriteria = $('#QuickSearchCriteria').val();
            $('#quickSearchModal').data('bs.modal').show(quickSearchCriteria);
        }

        var _QuickSearchEnterButtons = [];

        $(document).ready(function () {
            $('#QuickSearchCriteria').attr('data-toggle', 'tooltip');
            $('#QuickSearchCriteria').attr('placeholder', 'Order ID, Loan Number, Address, Borrower');
            $('#QuickSearchCriteria').attr('title', 'Enter Order ID, Loan Number, Address, or Borrower\'s Last Name');
            $('#QuickSearchCriteria').tooltip({ trigger: 'hover', placement: 'bottom', delay: { "show": 1500, "hide": 100 } });

            // Implements enter key to start quick search while focused on the quick search textbox. 
            $('#QuickSearchCriteria').on('focus', function () {
                // Find all .enter-button objects that are not disabled and save them to a global variable. 
                // Disable the buttons and then add the enter-button class to the QuickSearchCriteriaBtn.
                _QuickSearchEnterButtons = $('.enter-button:not(:disabled):visible');
                $(_QuickSearchEnterButtons).prop('disabled', true);
                $('#QuickSearchCriteriaBtn').addClass('enter-button');
            });

            $('#QuickSearchCriteria').on('blur', function () {
                // enable the old .enter-button buttons
                // Remove enter-button from QuickSearchCriteriaBtn
                $(_QuickSearchEnterButtons).prop('disabled', false);
                $('#QuickSearchCriteriaBtn').removeClass('enter-button')
            });
        });

	</script>


	<style>
		#quickSearchModal .ui-jqgrid tr.jqgrow td {
			white-space: normal !important;
			vertical-align: middle;
		}

		#quickSearchModal tr.ui-jqgrid-labels th {
			white-space: normal !important;
			vertical-align: middle;
		}
	</style>

	<div id="quickSearchModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Quick Search"
		aria-hidden="true">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<span class='modal-title'>Order Item Quick Search</span>
				</div>
				<div class="modal-body">
					<div class="form-horizontal">
						<div class="alert alert-warning"
							style="font-size:medium; margin-left:15px; margin-right:15px; display:none;"
							id="quickSearchIsTruncated">
							The results have been limited to the first 100 orders.
						</div>
						<div class="alert alert-danger"
							style="font-size:medium; margin-left:15px; margin-right:15px; display:none;"
							id="quickSearchNoResults">
							No results have been found.
						</div>
						<div class="form-group" style="margin-bottom: 0px;">
							<div class="col-md-1 text-right" style="padding-top: 5px;">
								<img src="/Content/images/help.png" />
                        </div>
								<div class="col-md-10">
									<p>
										The order item quick search finds orders by <i>Order ID</i>, <i>Loan Number</i>,
										<i>Address</i>, and the <i>Borrower's Last Name</i>.
										If only one order is found, you will be redirected. If multiple orders are
										found, they will be displayed in the list below.
									</p>
								</div>
							</div>
							<section class="quickSearch-grid col-md-12" style="margin-top:10px;">
								<div class="grid-panel" style="margin-left:0px;width:auto">
									<script type="text/javascript">
										$(function () {
$('#quickSearch').jqGrid({
	url: '/Orders/QuickSearch/Data',
	datatype: 'local',
	loadComplete: function (data) { $('#quickSearch').jqGrid('setGridParam',{datatype:'json'}); },
	mtype: 'POST',
ajaxGridOptions: { contentType: "application/json" },
serializeGridData: function(postData) { return JSON.stringify(postData); },
	styleUI: 'Bootstrap',
	colModel: [		{ name: 'OrderID', index: 'OrderID', label: 'Order ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'OrderItemID', index: 'OrderItemID', label: 'Order Item ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'OrderKey', index: 'OrderKey', label: 'ID', align: 'left', hidden: false, sortable: false, editable: false, width: 100, formatter: formatQuickSearchOrderKeyLink, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'LoanNumber', index: 'LoanNumber', label: 'Loan Number', align: 'left', hidden: false, sortable: false, editable: false, width: 125, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'Address', index: 'Address', label: 'Property Address', align: 'left', hidden: false, sortable: false, editable: false, width: 170, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'Borrower', index: 'Borrower', label: 'Borrower', align: 'left', hidden: false, sortable: false, editable: false, width: 175, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'ProductName', index: 'ProductName', label: 'Product', align: 'left', hidden: false, sortable: false, editable: false, width: 140, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' }],
	page: 1,
	pager: '#quickSearch-pager',
	rowNum: -1,
	beforeProcessing: quickSearchBeforeProcessing,
	height: 'auto',
	autowidth: true,
	viewrecords: true,
	gridview: true,
	shrinkToFit: true,
	sortable: true,
	loadonce: false,
	loadui: 'enable',
	caption: '',
	altRows: false,
	search: 'false',
	hidegrid: false,
	resizeStop: function (width, index) {
			if ($('div#gview_quickSearch .ui-jqgrid-bdiv').innerWidth() < $('div#gview_quickSearch .ui-jqgrid-btable').innerWidth())
				$('div#gview_quickSearch .ui-jqgrid-bdiv').css('overflow-x', 'scroll');
				else $('div#gview_quickSearch .ui-jqgrid-bdiv').css('overflow-x', 'hidden');
		$(window).on('resize', function() {
			if ($('div#gview_quickSearch .ui-jqgrid-bdiv').innerWidth() < $('div#gview_quickSearch .ui-jqgrid-btable').innerWidth())
				$('div#gview_quickSearch .ui-jqgrid-bdiv').css('overflow-x', 'scroll');
				else $('div#gview_quickSearch .ui-jqgrid-bdiv').css('overflow-x', 'hidden');
		});
	},
	loadError: function (xhr, status, error) {
		if (_isNavigating == true) return;
		if (xhr.status != '401') {
			try {
				var ajaxEx = $.parseJSON(xhr.responseText);
				alert(ajaxEx.Message);
			}
			catch (e) {
				alert(xhr.responseText);
			}
		}
	},
	jsonReader: { root: 'rows', page: 'page', total: 'total', records: 'records', id: 'OrderKey', cells: '', repeatitems: false }
	});
	$('#quickSearch').navGrid('#quickSearch-pager',{refresh: true, del: false, add: false, view: false, search: false, edit: false},{},{},{},{},{});
});

$(document).ready(function() {
	var stf = $('#quickSearch').getGridParam('shrinkToFit');
	if (stf == true)
		$('#gview_quickSearch').find('.ui-jqgrid-bdiv').css('overflow-x', 'hidden');
	else
		$('#gview_quickSearch').find('.ui-jqgrid-bdiv').css('overflow-x', 'auto');
});

									</script>

									<table id="quickSearch">
										<tr>
											<td />
										</tr>
									</table>

								</div>
							</section>
						</div>
					</div>
					<div class="modal-footer">
						<button class="btn btn-default" onclick="return false;" data-dismiss="modal">Cancel</button>
					</div>
				</div>
			</div>
		</div>

		<script type="text/javascript">
			// ClearValueQuickSearchModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        var _quickSearchCriteria = '';

        var ClearValueQuickSearchModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);
            this.$element.on('show.bs.modal', function (e) {
                spinnerOn();
                if(!isNullOrWhitespace(_quickSearchCriteria))
                    runQuickSearch(_quickSearchCriteria);
                var rowData = $('#quickSearch').getRowData();
                if (rowData.length == '1') {
                    window.location = '/Orders/' + rowData[0].OrderID + '/Items/' + rowData[0].OrderItemID + '/Dashboard';
                    return e.preventDefault();
                }
                spinnerOff();
            }).on('shown.bs.modal', function () {
                resizeQuickSearchGrid();
            });
        };

        ClearValueQuickSearchModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueQuickSearchModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        // NOT supporting relatedTarget - too many values to initialize and support show without adding methods - hence modal toggle not available
        ClearValueQuickSearchModal.prototype.show = function (quickSearchCriteria) {
            _quickSearchCriteria = quickSearchCriteria;
            this.clearvaluemodalparent('show');
        };

        var old = $.fn.clearvaluequicksearchmodal;

        $.fn.clearvaluequicksearchmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueQuickSearchModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueQuickSearchModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvaluequicksearchmodal.Constructor = ClearValueQuickSearchModal;

        $.fn.clearvaluequicksearchmodal.noConflict = function () {
            $.fn.clearvaluequicksearchmodal = old;
            return this;
        };

    })(jQuery);

    function resizeQuickSearchGrid() {
        var gridPanel = $('#quickSearchModal').find('.grid-panel');
        $(gridPanel).outerHeight(450, true);
        var $grid = $('#quickSearch');
        var $gridBody = $('div#gview_quickSearch .ui-jqgrid-bdiv');
        var gridHeaderHeight = $('div#gview_quickSearch .ui-jqgrid-hdiv').outerHeight(true);
        $gridBody.height($(gridPanel).innerHeight() - (gridHeaderHeight));
        gridParentWidth = $('#gbox_quickSearch').parent().innerWidth();
        $grid.setGridWidth(gridParentWidth, true);
    }

    function runQuickSearch(quickSearchCriteria) {
        $('#quickSearch').setPostDataItem('criteria', quickSearchCriteria);
        $('#quickSearch').setGridParam({ ajaxGridOptions: { async: false } });
        $("#quickSearch").trigger("reloadGrid");
    }

    function quickSearchBeforeProcessing(data) {
        var count = data.records;
        if (count <= 0) {
            $('#quickSearchNoResults').css('display', 'block');
        }
        else {
            $('#quickSearchNoResults').css('display', 'none');
        }

        $('#quickSearchIsTruncated').css('display', (data.isTruncated ? 'block' : 'none'));
    }

    function formatQuickSearchOrderKeyLink(cellvalue, options, rowObject) {
        return '<a href="/Orders/' + rowObject.OrderID + '/Items/' + rowObject.OrderItemID + '/Dashboard">' + cellvalue + '</a>';
    }

    $(document).ready(function () {
        $('#quickSearchModal').clearvaluequicksearchmodal();

        $("#quickSearch").on('jqGridDblClickRow', function (e, id) {
            var orderKeyInfo = parseOrderKey(id);
            window.location = '/Orders/' + orderKeyInfo.orderID + '/Items/' + orderKeyInfo.orderItemID + '/Dashboard';
        });
    });

		</script>


		<style type="text/css">
			#OrderSummaryToggle {
				padding-right: 50px;
			}
		</style>

		<div id="navBar" style="background-color: #f5f5f5; overflow-y: hidden;">
			<div class="col-md-10">
				<ol class="breadcrumb">
					<li><a href="/Orders/Pipeline">Home</a></li>
					<li><a href="/Orders/4865952/Items/1">Order Item 4865952.1 ( 129 Hawthorne Ct )</a></li>
					<li class="active">Dashboard</li>

				</ol>
			</div>
			<div class="col-md-2 text-right breadcrumb hidden" id="SummaryToggle"></div>
		</div>

		<script>
			$(document).ready(function () {
        var summaryHidden = localStorage.getItem('summaryHidden');
        if (summaryHidden === null || summaryHidden == "false") {
            $('#SummaryToggle').append('<a href="#" onclick="hideSummary(true);return false;">Hide Summary <span class="glyphicon glyphicon-chevron-up"></span></a>');
            localStorage.setItem('summaryHidden', false);
        } else {
            $('#SummaryToggle').append('<a href="#" onclick="hideSummary(false);return false;">Show Summary <span class="glyphicon glyphicon-chevron-down"></span></a>');
        }
    });


    function hideSummary(hide) {
        $('#SummaryToggle').trigger('hideSummary', hide);
        localStorage.setItem('summaryHidden', hide);
        if (hide == true) 
            $('#SummaryToggle').html('<a href="#" onclick="hideSummary(false);return false;">Show Summary <span class="glyphicon glyphicon-chevron-down"></span></a>');
        else 
            $('#SummaryToggle').html('<a href="#" onclick="hideSummary(true);return false;">Hide Summary <span class="glyphicon glyphicon-chevron-up"></span></a>');
    }
		</script>


		<div style="min-height: 300px;">
			<!-- content div in case there is styling for the width of the browser (before container) -->
			<!-- not using .content because in General.css its height is set to 1200 -->


			<style type="text/css">
				#orderItemTabs ul.nav-tabs>li:not(.active)>a:link,
				#orderItemTabs ul.nav-tabs>li:not(.active)>a:active,
				#orderItemTabs ul.nav-tabs>li:not(.active)>a:hover,
				#orderItemTabs ul.nav-tabs>li:not(.active)>a:visited {
					color: #428bca;
				}

				#orderItemTabs .grid-panel {
					margin-bottom: 15px;
				}

				.orderButtons {
					padding-top: 10px;
					padding-bottom: 10px;
				}

				.hidden {
					display: none;
				}

				body {
					overflow-y: hidden;
				}

				#extendedFieldsTabContent {
					overflow-y: scroll;
				}

				#orderItemTabs .nav>li>a>img {
					max-width: 20px;
					position: absolute;
				}
			</style>

			<div id="orderItemSummaryDiv">
				<style type="text/css">
					.order-item-summary div.row {
						background-color: #F2F2F2;
						border-style: solid;
						border-width: thin;
						border-color: Gray;
						border-left: 0;
						border-right: 0;
						border-bottom: 0;
					}

					.order-item-summary div.row:nth-child(even) {
						background-color: White;
					}

					.order-item-summary div.row:last-of-type {
						border-bottom: solid thin;
					}

					.order-item-summary .value-cell {
						font-weight: bold;
						padding-left: 0px;
					}

					.no-wrap {
						white-space: nowrap;
					}

					.text-red {
						color: red;
						font-weight: bold;
					}
				</style>

				<div class="order-item-summary container-fluid">
					<div class="col-md-12">
						<div class="row">
							<div class="col-md-1 text-right">Order ID:</div>
							<div class="col-md-2 text-left value-cell"><a
									href='/Orders/4865952/Items/1/Dashboard'>4865952</a> (Item 1)</div>
							<div class="col-md-1 text-right">Order Date:</div>
							<div class="col-md-1 text-left value-cell">3/15/2022</div>
							<div class="col-md-1 text-right">Source:</div>
							<div class="col-md-1 text-left value-cell">Admin Portal</div>
							<div class="col-md-1"></div>
							<div class="col-md-1"></div>
							<div class="col-md-1 text-right">Partner No.:</div>
							<div class="col-md-2 text-left value-cell">&amp;amp;#32;</div>
						</div>
						<div class="row">
							<div class="col-md-1 text-right">Address:</div>
							<div class="col-md-2 text-left value-cell">
								<b>129 Hawthorne Ct  <br />Reading, PA 19610</b>&nbsp;<a href="https://www.google.com"
									onclick="window.open('https://www.google.com/maps/place/129+Hawthorne+Ct+,Reading,PA,19610/', 'mapwin', 'left=20,top=20,width=700,height=450,toolbar=0,resizable=1'); return false;"><img src="/Content/images/magnifier.png" /></a>
							</div>
							<div class="col-md-1 text-right">County (Region):</div>
							<div class="col-md-1 text-left value-cell">Berks (SUBUR)</div>
							<div class="col-md-1 text-right">Borrower:</div>
							<div class="col-md-1 text-left value-cell">QA Tester</div>
							<div class="col-md-1"></div>
							<div class="col-md-1"></div>
							<div class="col-md-1 text-right">Co-borrower:</div>
							<div class="col-md-2 text-left value-cell">Not Specified</div>
						</div>
						<div class="row">
							<div class="col-md-1 text-right">Client:</div>
							<div class="col-md-2 text-left value-cell"><a href='/Clients/56107/Dashboard'>56107</a>
								(Test Client )</div>
							<div class="col-md-1 text-right">Branch:</div>
							<div class="col-md-1 text-left value-cell"><a
									href='/Clients/Branches/1051/Dashboard'>1051</a> (Broomfield)</div>
							<div class="col-md-1 text-right">Product:</div>
							<div class="col-md-1 text-left value-cell"><a href='/Clients/56107/Products/2'>1004
									URAR/MC</a></div>
							<div class="col-md-1"></div>
							<div class="col-md-1"></div>
							<div class="col-md-1 text-right">Vendor:</div>
							<div class="col-md-2 text-left value-cell"><a href='/Vendors/253753/Dashboard'>253753</a>
								(RICHARD BELON) | Active<br /><a
									href="mailto:dametest@valuationconnect.com?subject=Order 4865952.1, 129 Hawthorne Ct in Reading, PA 19610">dametest@valuationconnect.com</a>
								| 1111111111</div>
						</div>
						<div class="row">
							<div class="col-md-1 text-right">Loan No.:</div>
							<div class="col-md-2 text-left value-cell">tesrt0097897</div>
							<div class="col-md-1 text-right">Purpose:</div>
							<div class="col-md-1 text-left value-cell">Other</div>
							<div class="col-md-1 text-right">Loan Type:</div>
							<div class="col-md-1 text-left value-cell">None</div>
							<div class="col-md-1 text-right">Loan Closing Date:</div>
							<div class="col-md-1 text-left value-cell"></div>
							<div class="col-md-1 text-right">FHA Case No.:</div>
							<div class="col-md-2 text-left value-cell">Not Specified</div>
						</div>
						<div class="row">
							<div class="col-md-1 text-right">Client Fee:</div>
							<div class="col-md-2 text-left value-cell">$530.00</div>
							<div class="col-md-1 text-right">Vendor Fee:</div>
							<div class="col-md-1 text-left value-cell">$425.00</div>
							<div class="col-md-1 text-right">Client Due:</div>
							<div class="col-md-1 text-left value-cell">3/25/2022</div>
							<div class="col-md-1 text-right">Client Requested Due:</div>
							<div class="col-md-1  text-left value-cell"></div>
							<div class="col-md-1 text-right">Vendor Due:</div>
							<div class="col-md-2 text-left value-cell">2/28/2022</div>
						</div>
						<div class="row">
							<div class="col-md-1 text-right">Last Status:</div>
							<div class="col-md-2 text-left value-cell">Inspection Complete</div>
							<div class="col-md-1 text-right">Checked Out:</div>
							<div class="col-md-1 text-left value-cell">Not Checked Out</div>
							<div class="col-md-1 text-right no-wrap">Case File ID:</div>
							<div class="col-md-1 text-left value-cell"></div>
							<div class="col-md-1 text-right">Foreclosure Sale Date:</div>
							<div class="col-md-1  text-left value-cell"></div>
							<div class="col-md-1 text-right text-red">Zone:</div>
							<div class="col-md-1 text-left text-red">2</div>

							<div class="col-md-1 text-right no-wrap">Property Data ID:</div>
							<div class="col-md-2 text-left value-cell"></div>
						</div>
						<div class="row">
							<div class="col-md-1 text-right">Current Queue:</div>
							<div class="col-md-2 text-left value-cell">Awaiting Report from Vendor</div>
							<div class="col-md-1 text-right">Follow-Up:</div>
							<div class="col-md-1 text-left value-cell"></div>
							<div class="col-md-1 text-right">Related Order:</div>
							<div class="col-md-1 text-left value-cell"><a href='/Orders/4865946/Items/1'>4865946</a>
							</div>
							<div class="col-md-1"></div>
							<div class="col-md-1"></div>
							<div class="col-md-1 text-right">Value:</div>
							<div class="col-md-2 text-left value-cell"></div>
						</div>
					</div>
				</div>

				<script>
					$(document).ready(function () {
        $('#SummaryToggle').removeClass('hidden');

        $('#SummaryToggle').on('hideSummary', function (e, hide) {
            if (hide)
                $('#orderItemSummaryDiv').css('display', 'none');
            else
                $('#orderItemSummaryDiv').css('display', 'block');
            $(window).resize();
        }).trigger('hideSummary', localStorage.getItem('summaryHidden') == "true");
    });
				</script>


			</div>

			<div id="userlock" class="alert alert-success clearfix"
				style="padding-top: 0px; padding-bottom: 0px; margin-bottom: 0px;">
				<div style="float: left; margin-top: 5px;">
					<span>Lock Status: </span><span class="lock-status" style="font-size: 14px; font-weight: 700;"></span>
				</div>
				<div style="float: right;">
					<button id="btnRelease" class="btn btn-default btn-sm" type="button">Release Lock</button>
					<button id="btnLock" class="btn btn-default btn-sm" type="button">Lock for Editing</button>
				</div>
			</div>
			<div id="alertsDiv">
				<style>
					#warnings .alert {
						margin-bottom: 0px;
					}

					#ribbonIndicators label {
						color: #fff;
						font-style: normal;
						display: inline;
						margin-right: 5px;
					}
				</style>

				<div id="warnings">
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; display: none;"
						id="estimatedValueAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						Be advised that the estimated value of the subject property is less than the recorded
						sales/contract price.
					</div>
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; display: none;"
						id="disputeAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						This order has open client disputes, and consequently cannot be approved until they have all
						been closed.
					</div>
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; display: none;"
						id="UCDPPendingChangeAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						Updates have been made to this UCDP/EAD submission that have <b>not</b> yet been submitted.
						There are currently hard stop issues that you have requested overrides for, or hard stop issues
						that
						you have indicated have no resolution, that have not yet been submitted. Once there are
						no additional issues to update, you can submit these updates using the <i>Submit Changes</i>
						button on the UCDP/EAD tab.
					</div>
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; display: none;"
						id="complexPropertyAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						The subject property has been designated as a complex property.
					</div>
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; display: none;"
						id="doNotReleaseAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						This order item has been flagged as one that should not be released to the client at this point.
						Consequently,
						the option to approve the report will not be available until that flag has been cleared.
					</div>
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; " id="recentOrderAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						You may have provided services, a 1004 URAR/MC, on this property on March 15, 2022. Please check
						the Value History tab for additional details.
					</div>
					<div class="alert alert-warning alert-dismissible" style="font-size:14px; display: none;"
						id="valueVarianceAlert">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
					</div>
					<div class="alert alert-danger alert-dismissible" style="font-size:14px; display: none;"
						id="contactDifferent">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						QA - Borrower Name Difference - Please confirm correct on the report.
					</div>
					<!--Display selected pipeline indicators-->
					<div class="alert alert-dismissible" style="font-size:14px;  background: #ffaa00"
						id="ribbonIndicators">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						<label> False Vendor ETA – Reassign</label>
						<label> Live Quote Only Request</label>
						<label> Unresponsive Vendor</label>
					</div>

				</div>

				<script type="text/javascript">
					$(document).ready(function () {
		$('#warnings .alert').on('closed.bs.alert', function () {
			var newHeight = $("div#warnings").outerHeight(true) - $(this).outerHeight(true);
			$("div#warnings").outerHeight(newHeight, true);
			resizeTabPanel();
		});
		resizeTabPanel();
	})
				</script>
			</div>
			<div id="orderItemButtonsDiv">



				<style>
					#Pipeline {
						width: 300px;
						padding-bottom: 5px;
					}

					#Pipeline>dt {
						cursor: pointer;
						display: block;
						padding: 3px 5px;
						clear: both;
						font-weight: normal;
						line-height: 1.428571429;
						color: #333;
						white-space: nowrap;
					}

					#Pipeline>dd {
						font-size: small;
						padding: 3px 10px;
						line-height: 1.2;
						margin-left: 10px;
					}

					#Pipeline>dd a label {
						cursor: pointer;
						font-weight: normal;
						color: #333;
						margin-bottom: 0px;
					}

					.scroll-Y {
						overflow-y: auto;
					}
				</style>





				<style>
					#upgradeOrderItemModal .ui-jqgrid tr.jqgrow td {
						white-space: normal !important;
						vertical-align: middle;
					}

					#upgradeOrderItemModal tr.ui-jqgrid-labels th {
						white-space: normal !important;
						vertical-align: middle;
					}

					#upgradeOrderItemModal .ui-jqgrid tr.jqgrow td input {
						margin-right: 0px;
						margin-left: 5px;
					}

					#upgradeOrderItemModal tr.ui-jqgrid-labels th input {
						margin-right: 0px;
						margin-left: 5px;
					}
				</style>

				<script type="text/javascript">
					function formatUpgradeDescription(cellvalue, options, rowObject) {
        var description = '';

        if (rowObject.Reason)
            description += '<b>' + rowObject.Reason + '</b><br />';
        description += rowObject.Comments;
        return description;
    }
    function formatClientOrVendor(cellvalue, options, rowObject) {
        var ClientOrVendor = '';

        if (rowObject.AdjustmentType)
            ClientOrVendor = String.fromCharCode(rowObject.AdjustmentType);
        if (ClientOrVendor == 'C')
            return 'Client';
        else
            return 'Vendor';
    }

    function vendorFeesGridComplete() {
        var rowData = $('#vendorFees').getRowData();
        for (i = 0; i < rowData.length; i++) {

            var selected = (rowData[i].FeeAdjustmentReasonID == "RUSH" || ($('#UpgradeOrderItemEdit_UseSameVendor').is(':checked') && (rowData[i].FeeAdjustmentReasonID == "TRIP_RES" || rowData[i].FeeAdjustmentReasonID == "NEGOTIATED")));
            if (selected)
                $('#vendorFees').setSelection(rowData[i].FeeAdjustmentID);

            var reasonID = rowData[i].FeeAdjustmentReasonID;
            var adjustmentFeeID = rowData[i].FeeAdjustmentID;
            var assignToSameVendor = $('#UpgradeOrderItemEdit_UseSameVendor').is(':checked');

            if (!assignToSameVendor)
                $('#vendorFees tr#' + adjustmentFeeID).show();
            else if (reasonID == 'NEGOTIATED') {
                $('#vendorFees').jqGrid('resetSelection', adjustmentFeeID);
                $('#vendorFees tr#' + adjustmentFeeID).hide();
            }
        }
    }
				</script>

				<div id="upgradeOrderItemModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Upgrade"
					aria-hidden="true">
					<div id="ConfirmOrderupgrade" class="modal" tabindex="-1" role="dialog"
						aria-labelledby="ConfirmOrderupgradeTitle" aria-hidden="true">
						<div class="modal-dialog modal-dialog-centered" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close"  aria-hidden="true">×</button>
									<span class="modal-title">Confirm Fees</span>

								</div>
								<div class="modal-body">
									<ul id="AddFeesConfirmation">


									</ul>
								</div>
								<div class="modal-footer">
									<button class="btn btn-default modal-enter-button enter-button" OnClick="$('#upgradeOrderItemModal').data('bs.modal').save();">Confirm</button>
									<button type="button" class="btn btn-secondary" id="closeConfirm">Edit</button>
								</div>
							</div>
						</div>
					</div>
					<div class="modal-dialog modal-lg">
						<div class="modal-content">
							<div class="modal-header">
								<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
								<span class='modal-title'>Upgrade Order Item</span>
							</div>
							<div class="modal-body">
								<form id="frmUpgradeOrderItem" class="form-horizontal">

									<input id="UpgradeOrderItemEdit_OrderID" name="UpgradeOrderItemEdit.OrderID" type="hidden" value="" />
									<input id="UpgradeOrderItemEdit_OrderItemID" name="UpgradeOrderItemEdit.OrderItemID" type="hidden" value="" />
									<div id='dialog'></div>
									<div class="form-group">
										<div class="col-md-offset-3 col-md-10" style="color: red;">
											<div class="validation-summary-errors">
												<ul></ul>
											</div>
										</div>
									</div>
									<div class="form-group">
										<label class="control-label col-md-4" for="UpgradeOrderItemEdit_ProductID">New Product:</label>
										<div class="controls col-md-4">
											<select class="form-control" id="UpgradeOrderItemEdit_ProductID" name="UpgradeOrderItemEdit.ProductID" onchange="if (this.setCustomValidity) this.setCustomValidity(&#39;&#39;);" oninvalid="this.setCustomValidity(&#39;Product is required.&#39;)" required="required"><option value="">(Choose A Product)</option>
</select>
										</div>
									</div>

									<div class='form-group'>
										<label class="control-label col-md-4" for="UpgradeOrderItemEdit_RequiredByDate">Client Due Date:</label>
										<div class='input-group date col-md-4'
											style='float: left !important; padding-left: 15px !important; padding-right: 15px !important;'
											id='UpgradeOrderItemEdit_RequiredByDate_39abd45a-8cfc-41d3-aced-9a9769649fcd'>
											<input class="form-control" id="UpgradeOrderItemEdit_RequiredByDate" name="UpgradeOrderItemEdit.RequiredByDate" type="text" value="" />
											<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>
											</span> </div>
									</div>
									<script type='text/javascript'>
										$(document).ready(function() {
		$('#UpgradeOrderItemEdit_RequiredByDate_39abd45a-8cfc-41d3-aced-9a9769649fcd').datetimepicker({ format: '', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });
		$('#UpgradeOrderItemEdit_RequiredByDate_39abd45a-8cfc-41d3-aced-9a9769649fcd').on('dp.change', function() {
			var inputElement = $('#UpgradeOrderItemEdit_RequiredByDate')[0];
			if (inputElement.setCustomValidity)
				inputElement.setCustomValidity('');
		});
		$('#UpgradeOrderItemEdit_RequiredByDate').on('keyup', function() {
			if (this.setCustomValidity)
				this.setCustomValidity('');
		});
		$('#UpgradeOrderItemEdit_RequiredByDate_39abd45a-8cfc-41d3-aced-9a9769649fcd').data('DateTimePicker').date('');
	});
									</script>

									<div class='form-group'>
										<label class="control-label col-md-4" for="UpgradeOrderItemEdit_VendorDueDate">Vendor Due Date:</label>
										<div class='input-group date col-md-4'
											style='float: left !important; padding-left: 15px !important; padding-right: 15px !important;'
											id='UpgradeOrderItemEdit_VendorDueDate_86b79c7c-c1e5-425e-9dc9-f844c00229ee'>
											<input class="form-control" id="UpgradeOrderItemEdit_VendorDueDate" name="UpgradeOrderItemEdit.VendorDueDate" type="text" value="" />
											<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>
											</span> </div>
									</div>
									<script type='text/javascript'>
										$(document).ready(function() {
		$('#UpgradeOrderItemEdit_VendorDueDate_86b79c7c-c1e5-425e-9dc9-f844c00229ee').datetimepicker({ format: '', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });
		$('#UpgradeOrderItemEdit_VendorDueDate_86b79c7c-c1e5-425e-9dc9-f844c00229ee').on('dp.change', function() {
			var inputElement = $('#UpgradeOrderItemEdit_VendorDueDate')[0];
			if (inputElement.setCustomValidity)
				inputElement.setCustomValidity('');
		});
		$('#UpgradeOrderItemEdit_VendorDueDate').on('keyup', function() {
			if (this.setCustomValidity)
				this.setCustomValidity('');
		});
		$('#UpgradeOrderItemEdit_VendorDueDate_86b79c7c-c1e5-425e-9dc9-f844c00229ee').data('DateTimePicker').date('');
	});
									</script>


									<div class="form-group" style="margin-left:100px;" id="VendorClientFee">

										<div class="form-group">
											<label class="control-label col-md-3" for="UpgradeOrderItemEdit_clientBilled">What should the client be billed for this order?</label>
											<div class="controls col-md-3">
												<textarea class="form-control" cols="20" id="UpgradeOrderItemEdit_clientBilled" name="UpgradeOrderItemEdit.clientBilled" required="required" rows="1" style="resize: none;">
</textarea>
											</div>
										</div>


										<div class="form-group">
											<label class="control-label col-md-3" for="UpgradeOrderItemEdit_vendorPayed">What should the vendor be payed for this order?</label>
											<div class="controls col-md-3">
												<textarea class="form-control" cols="20" id="UpgradeOrderItemEdit_vendorPayed" name="UpgradeOrderItemEdit.vendorPayed" required="required" rows="1" style="resize: none;">
</textarea>
											</div>
										</div>


									</div>

									<div class="form-group">
										<label class="control-label col-md-4 " for="UpgradeOrderItemEdit_UseSameVendor">Use the Same Vendor?</label>
										<div class="controls col-md-1">
											<div class="checkbox" style="position: relative; top: -2px;">
												<input disabled="disabled" id="UpgradeOrderItemEdit_UseSameVendor" name="UpgradeOrderItemEdit.UseSameVendor" type="checkbox" value="true" /><input name="UpgradeOrderItemEdit.UseSameVendor" type="hidden" value="false" />
		</div>
											</div>

										</div>
										<div class="form-group" style="margin-left:18px;">
											<label class="control-label"><b>Select fees that should be retained:</b></label>
										</div>
										<section class="vendorFees-grid col-md-12" style="margin-top:10px;">
											<div class="grid-panel" style="margin-left:0px;width:auto">
												<script type="text/javascript">
													$(function () {
$('#vendorFees').jqGrid({
	url: '',
	datatype: 'local',
	loadComplete: function (data) { $('#vendorFees').jqGrid('setGridParam',{datatype:'json'}); },
	mtype: 'GET',
	styleUI: 'Bootstrap',
	colModel: [		{ name: 'FeeAdjustmentID', index: 'FeeAdjustmentID', label: 'Fee Adjustment ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, formatter: 'integer', formatoptions: { defaultValue: '' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { integer: true }, sorttype: 'int' },
		{ name: 'FeeAdjustmentReasonID', index: 'FeeAdjustmentReasonID', label: 'Fee Adjustment Reason ID', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'AdjustmentDate', index: 'AdjustmentDate', label: '<div style="text-align: center; width: 100%;">Date</div>', align: 'center', hidden: false, sortable: false, editable: false, width: 50, formatter: jqGridJSONDateFormatter, formatoptions: { format: 'd', serverTimeZoneOffset: '300', showServerTime: true }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'], dataInit: function (elem) {$(elem).datepicker({onSelect: function (dateText, inst) { var gridID = $(this).parents('div.ui-jqgrid').first().attr('id').replace('gbox_',''); setTimeout(function () { $('#' + gridID)[0].triggerToolbar(); }, 100); }});} }, searchrules: { date: true }, sorttype: 'text' },
		{ name: 'FullName', index: 'FullName', label: 'Entered By', align: 'left', hidden: false, sortable: false, editable: false, width: 80, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'Comments', index: 'Comments', label: 'Comments', align: 'left', hidden: true, sortable: true, editable: false, width: 100, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'Reason', index: 'Reason', label: 'Description', align: 'left', hidden: false, sortable: false, editable: false, width: 180, formatter: formatUpgradeDescription, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'AdjustmentType', index: 'AdjustmentType', label: 'Client/Vendor', align: 'left', hidden: false, sortable: false, editable: false, width: 52, formatter: formatClientOrVendor, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt','bw','ew','cn','nc'] }, sorttype: 'text' },
		{ name: 'Amount', index: 'Amount', label: '<div style="text-align: center; width: 100%;">Amount</div>', align: 'right', hidden: false, sortable: false, editable: false, width: 50, formatter: 'currency', formatoptions: { defaultValue: '', prefix: '$ ' }, search: false, stype: 'text' , searchoptions: { sopt: ['eq','ne','lt','gt'] }, searchrules: { number: true }, sorttype: 'currency' }],
	page: 1,
	pager: '#vendorFees-pager',
	rowNum: -1,
	gridComplete: vendorFeesGridComplete,
	height: 'auto',
	autowidth: true,
	viewrecords: true,
	gridview: true,
	shrinkToFit: true,
	multiselect: true,
	multiboxonly: false,
	sortable: true,
	loadonce: false,
	loadui: 'disable',
	caption: '',
	altRows: false,
	search: 'false',
	hidegrid: false,
	resizeStop: function (width, index) {
			if ($('div#gview_vendorFees .ui-jqgrid-bdiv').innerWidth() < $('div#gview_vendorFees .ui-jqgrid-btable').innerWidth())
				$('div#gview_vendorFees .ui-jqgrid-bdiv').css('overflow-x', 'scroll');
				else $('div#gview_vendorFees .ui-jqgrid-bdiv').css('overflow-x', 'hidden');
		$(window).on('resize', function() {
			if ($('div#gview_vendorFees .ui-jqgrid-bdiv').innerWidth() < $('div#gview_vendorFees .ui-jqgrid-btable').innerWidth())
				$('div#gview_vendorFees .ui-jqgrid-bdiv').css('overflow-x', 'scroll');
				else $('div#gview_vendorFees .ui-jqgrid-bdiv').css('overflow-x', 'hidden');
		});
	},
	loadError: function (xhr, status, error) {
		if (_isNavigating == true) return;
		if (xhr.status != '401') {
			try {
				var ajaxEx = $.parseJSON(xhr.responseText);
				alert(ajaxEx.Message);
			}
			catch (e) {
				alert(xhr.responseText);
			}
		}
	},
	jsonReader: { root: 'rows', page: 'page', total: 'total', records: 'records', id: 'FeeAdjustmentID', cells: '', repeatitems: false }
	});
	$('#vendorFees').navGrid('#vendorFees-pager',{refresh: true, del: false, add: false, view: false, search: false, edit: false},{},{},{},{},{});
});

$(document).ready(function() {
	var stf = $('#vendorFees').getGridParam('shrinkToFit');
	if (stf == true)
		$('#gview_vendorFees').find('.ui-jqgrid-bdiv').css('overflow-x', 'hidden');
	else
		$('#gview_vendorFees').find('.ui-jqgrid-bdiv').css('overflow-x', 'auto');
});

												</script>

												<table id="vendorFees">
													<tr>
														<td />
													</tr>
												</table>

											</div>
										</section>
								</form>
							</div>
							<div class="modal-footer">

								<button class="btn btn-default modal-enter-button enter-button" id="SaveOrderUpgrade"  >Upgrade</button>
								<button class="btn btn-default" onclick="return false;" data-dismiss="modal">Cancel</button>
							</div>
						</div>
					</div>
				</div>

				<script type="text/javascript">
					// ClearValueUpgradeOrderItemModal : ClearValueModal
    var save = false;
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        var _upgradeOrderItemEdit;



        var ClearValueUpgradeOrderItemModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);


			this.$element.find('#UpgradeOrderItemEdit_UseSameVendor').change(function () {
				var assignToSameVendor = $(this).is(':checked');
                showHideVendorNegotiatedFees(assignToSameVendor);
            });

            

            this.$element.on('show.bs.modal', function (e) {
              $(this).find('#UpgradeOrderItemEdit_clientBilled').numericInput({ allowFloat: true, allowNegative: true, max: 99999 });
                $(this).find('#UpgradeOrderItemEdit_clientBilled').blur(function () { if ($(this).val() !== '') $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); }).blur();
                $(this).find('#UpgradeOrderItemEdit_vendorPayed').numericInput({ allowFloat: true, allowNegative: true, max: 99999 });
                $(this).find('#UpgradeOrderItemEdit_vendorPayed').blur(function () { if ($(this).val() !== '') $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); }).blur();
                $(this).find("#UpgradeOrderItemEdit_OrderID").val(_upgradeOrderItemEdit.OrderID);
                $(this).find("#UpgradeOrderItemEdit_OrderItemID").val(_upgradeOrderItemEdit.OrderItemID);
                $(this).find("#UpgradeOrderItemEdit_RequiredByDate").val(_upgradeOrderItemEdit.RequiredByDate);
                $(this).find("#UpgradeOrderItemEdit_VendorDueDate").val(_upgradeOrderItemEdit.VendorDueDate);
				$(this).find("#UpgradeOrderItemEdit_UseSameVendor").prop('checked', _upgradeOrderItemEdit.UseSameVendor);
				$(this).find("#UpgradeOrderItemEdit_UseSameVendor").prop('disabled', !_upgradeOrderItemEdit.UseSameVendor)
				$(this).find(".validation-summary-errors ul li").remove();
            }).on('shown.bs.modal', function () {
                $(this).find("#UpgradeOrderItemEdit_ProductID").val('');
                $(this).find("#UpgradeOrderItemEdit_vendorPayed").val('');
                $(this).find('#UpgradeOrderItemEdit_ProductID').focus();
                $(this).find("#UpgradeOrderItemEdit_clientBilled").val('');
                resizeUpgradeGrid();
                $(this).find('#closeConfirm').click(function () { $('#ConfirmOrderupgrade').hide() });
                

            });
        };


        ClearValueUpgradeOrderItemModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueUpgradeOrderItemModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        // NOT supporting relatedTarget - too many values to initialize and support show without adding methods - hence modal toggle not available
        ClearValueUpgradeOrderItemModal.prototype.show = function (key) {
            var keys = key.split('.');
            var orderID = keys[0];
            var orderItemID = keys[1];

            $.ajax({
                url: '/Orders/' + orderID + '/Items/' + orderItemID + '/Upgrade/Data',
                type: 'GET',
                cache: false,
                contentType: "application/json",
                dataType: 'json',
                async: false
            })
            .done(function (result) {
                if (result.upgradeOrderItemEdit.OrderID) {
                    _upgradeOrderItemEdit = new UpgradeOrderItemEdit(result.upgradeOrderItemEdit);
                    replaceSelectOptions($('#upgradeOrderItemModal #UpgradeOrderItemEdit_ProductID'), result.products, '(Choose a Product)');
                    getVendorFees(orderID, orderItemID);
                }
                else {
                    showInvalidPermissionModal("The order could not be found for OrderID: " + orderID + " and OrderItemID: " + orderItemID + ".");
                    return e.preventDefault();
                }
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                spinnerOff();
                handleException(jqXHR, textStatus, errorThrown);
                return e.preventDefault();
            })
            .always(function () {
                spinnerOff();
            });
            this.clearvaluemodalparent('show');
        };
       
        ClearValueUpgradeOrderItemModal.prototype.save = function () {
         
             var upgradeOrderItemModal = this;
                    var $upgradeOrderItemModalElement = this.$element;

                    $upgradeOrderItemModalElement.find('button').prop('disabled', true);

                    var form = $('#frmUpgradeOrderItem')[0];

                    //check if the contact passed client side validation
                    if (form.checkValidity()) {
                        spinnerOn();

                        $.ajax({
                            url: '/Orders/' + _upgradeOrderItemEdit.OrderID + '/Items/' + _upgradeOrderItemEdit.OrderItemdID + '/UserActions/Upgrade',
                            type: 'POST',
                            data: generateUpgradePostData(),
                            contentType: "application/x-www-form-urlencoded",
                            dataType: 'json',
                            cache: false
                        })
                            .done(function (results) {
                                if (results.result) {
                                    if (results.result.Success) {
                                        $('#ConfirmOrderupgrade').hide();
                                        $upgradeOrderItemModalElement.trigger('done.cvc.bs.modal');
                                        window.location = '/Orders/' + _upgradeOrderItemEdit.OrderID + '/Items/' + results.newOrderItemID + '/Dashboard';
                                    }
                                    else {
                                        $('#ConfirmOrderupgrade').hide();
                                        upgradeOrderItemModal.hide();
                                        var result = results.result;
                                        showResultModal("Update Order Item Results", "", [result]);
                                    }
                                }
                                else {
                                    displayValidationErrors(results);
                                }
                            })
                            .fail(function (jqxhr) {
                                handleException(jqxhr);
                            })
                            .always(function () {
                                spinnerOff();
                                $upgradeOrderItemModalElement.find('button').prop('disabled', false);
                            });
                    }
                    else {
                        $upgradeOrderItemModalElement.find('button').prop('disabled', false);
                        form.reportValidity();
                    }
        };
        //function UpdateOrderItem() {
        //    if (_upgradeOrderItemEdit.formset.length > 0)
        //        $('#exampleModalCenter').show();
        //}
        function displayValidationErrors(result) {
            var $list = $('#frmUpgradeOrderItem').find('div.validation-summary-errors ul');
            $list.find('li').remove();
            for (var i = 0; i < result.length; i++)
                $list.append('<li>' + result[i].ErrorMessage + '</li>');
            window.scrollTo(0, document.body.scrollHeight);
        }

        function scrubExternalDataValue(value) {
            if (value === undefined) return '';
            if (value == null) return '';
            if (typeof value === 'string')
                if (value.startsWith('/Date(')) return formatJSONDate(value, 'g', true, 240);

            return value;
        }

        function UpgradeOrderItemEdit(upgradeOrderItemEdit) {
            this.OrderID = (upgradeOrderItemEdit.OrderID === undefined) ? 0 : upgradeOrderItemEdit.OrderID;
            this.OrderItemID = (upgradeOrderItemEdit.OrderItemID === undefined) ? 0 : upgradeOrderItemEdit.OrderItemID;
            this.ProductID = (upgradeOrderItemEdit.ProductID === undefined) ? 0 : upgradeOrderItemEdit.ProductID;
            this.RequiredByDate = (upgradeOrderItemEdit.RequiredByDate === undefined) ? '' : scrubExternalDataValue(upgradeOrderItemEdit.RequiredByDate);
            this.VendorDueDate = (upgradeOrderItemEdit.VendorDueDate === undefined) ? '' : scrubExternalDataValue(upgradeOrderItemEdit.VendorDueDate);
		    this.VendorFees = (upgradeOrderItemEdit.VendorFees === undefined) ? {} : upgradeOrderItemEdit.VendorFees;
            this.UseSameVendor = (upgradeOrderItemEdit.UseSameVendor === undefined) ? false : upgradeOrderItemEdit.UseSameVendor;
            this.formset = (upgradeOrderItemEdit.formset === undefined) ? {} : upgradeOrderItemEdit.formset;
            this.OrderItemVendorFee = (upgradeOrderItemEdit.OrderItemVendorFee === undefined) ? 0 : upgradeOrderItemEdit.OrderItemVendorFee;
            this.OrderItemClientFee = (upgradeOrderItemEdit.OrderItemClientFee === undefined) ? 0 : upgradeOrderItemEdit.OrderItemClientFee;
        }

       
            $('#SaveOrderUpgrade').click(function () {
            //$("#AddFeesConfirmation").html(""); $("#AddFeesConfirmation").append('<li>(Insert the client fee that has been entered for the original order)  <b>Original Order Client FEE ' + _upgradeOrderItemEdit.OrderItemClientFee + '</b></li>')
            //$("#AddFeesConfirmation").append('<li>(Insert the vendor fee that has been entered for the original order)  <b>Original Order Vendor FEE ' + _upgradeOrderItemEdit.OrderItemVendorFee + '</b></li>')
                $("#AddFeesConfirmation").empty();
                $("#AddFeesConfirmation").append('<li>Original Order New Client FEE ' + $("#UpgradeOrderItemEdit_clientBilled").val() + '</li>')
                $("#AddFeesConfirmation").append('<li>Original Order New Vendor FEE ' + $("#UpgradeOrderItemEdit_vendorPayed").val() + '</li>');
                if ($("#UpgradeOrderItemEdit_clientBilled").val() == '')
                {
                    $("#UpgradeOrderItemEdit_clientBilled").focus(); alert('Please enter fee which client be billed for this order');
                } else if ($("#UpgradeOrderItemEdit_vendorPayed").val() == '')
                {
                    $("#UpgradeOrderItemEdit_vendorPayed").focus(); alert('Please enter fee which vendor be payed for this order');
                }
                else if ($("#UpgradeOrderItemEdit_ProductID").val() == '')
                {
                    $("#UpgradeOrderItemEdit_ProductID").focus(); alert('Please select New Product from dropdown');
                } else $('#ConfirmOrderupgrade').show();
            });
        

        function generateUpgradePostData() {
            var upgradeOrderItemEdit = $('#frmUpgradeOrderItem').serializeArray();
            var selectedRowIDs = $("#vendorFees").jqGrid('getGridParam', 'selarrrow');
            for (i = 0; i < selectedRowIDs.length; i++) {
				upgradeOrderItemEdit.push({
					name: 'UpgradeOrderItemEdit.VendorFees[' + i + ']',
					value: $('#vendorFees').getRowData(selectedRowIDs[i]).FeeAdjustmentID
                })
                }
            return upgradeOrderItemEdit;
		}

		function showHideVendorNegotiatedFees(assignToSameVendor) {
			var i = 0;
			var rows = $('#vendorFees').getRowData();

			for (i = 0; i < rows.length; i++) {
				var reasonID = rows[i].FeeAdjustmentReasonID;
				var adjustmentFeeID = rows[i].FeeAdjustmentID;

				if (!assignToSameVendor)
					$('#vendorFees tr#' + adjustmentFeeID).show();
				else if (reasonID == 'NEGOTIATED') {

					$('#vendorFees').jqGrid('resetSelection', adjustmentFeeID);
					$('#vendorFees tr#' + adjustmentFeeID).hide();
				}
			}
		}

        function getVendorFees(orderID, orderItemID) {
            var url = '/Orders/' + orderID + '/Items/' + orderItemID + '/VendorFees/Data';
            $("#vendorFees").setGridParam({ url: url })
			$("#vendorFees").trigger("reloadGrid");
        }

        function resizeUpgradeGrid() {
            var gridPanel = $('#upgradeOrderItemModal').find('.grid-panel');
            $(gridPanel).outerHeight(350, true);
            var $grid = $('#vendorFees');
            var $gridBody = $('div#gview_vendorFees .ui-jqgrid-bdiv');
            var gridHeaderHeight = $('div#gview_vendorFees .ui-jqgrid-hdiv').outerHeight(true);
            $gridBody.height($(gridPanel).innerHeight() - (gridHeaderHeight));
            gridParentWidth = $('#gbox_vendorFees').parent().innerWidth();
            $grid.setGridWidth(gridParentWidth, true);
        }

        var old = $.fn.clearvalueupgradeorderitemmodal;

        $.fn.clearvalueupgradeorderitemmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueUpgradeOrderItemModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueUpgradeOrderItemModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvalueupgradeorderitemmodal.Constructor = ClearValueUpgradeOrderItemModal;

        $.fn.clearvalueupgradeorderitemmodal.noConflict = function () {
            $.fn.clearvalueupgradeorderitemmodal = old;
            return this;
        };

    })(jQuery);

    $(document).ready(function () {
        $('#upgradeOrderItemModal').clearvalueupgradeorderitemmodal();
        $('#ConfirmOrderupgrade').find("button.close").click(function () {
            $('#ConfirmOrderupgrade').hide();
        });
    });

				</script>


				<div id="followUpDateModal" class="modal order-grid-modal" tabindex="-1" role="dialog"
					aria-labelledby="Set Appointment Time" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<div class="modal-header">
								<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
								<span class="modal-title">Set a Custom Follow-up Time</span>
							</div>
							<div class="modal-body">
								<form id="frmFollowUpDate" class="form-horizontal">
									<div class="form-group" id="validationGroup">
										<div class="col-md-offset-2 col-md-9" style="color: red;">
											<div class="validation-summary-errors">
												<ul></ul>
											</div>
										</div>
									</div>
									<div class="form-group">
										<div class="col-md-1"></div>
										<div class='input-group date col-md-10'
											style='float: left !important; padding-left: 15px !important; padding-right: 15px !important;'
											id='FollowUpDate_08e91e8d-6e2d-4b19-a5f6-86763db488e6'>
											<input class="form-control" id="FollowUpDate" name="FollowUpDate" type="text" value="" />
											<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>
											</span> </div>
										<script type='text/javascript'>
											$(document).ready(function() {
		$('#FollowUpDate_08e91e8d-6e2d-4b19-a5f6-86763db488e6').datetimepicker({ format: 'MM/DD/YYYY h:mm A', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });
		$('#FollowUpDate_08e91e8d-6e2d-4b19-a5f6-86763db488e6').on('dp.change', function() {
			var inputElement = $('#FollowUpDate')[0];
			if (inputElement.setCustomValidity)
				inputElement.setCustomValidity('');
		});
		$('#FollowUpDate').on('keyup', function() {
			if (this.setCustomValidity)
				this.setCustomValidity('');
		});
		$('#FollowUpDate_08e91e8d-6e2d-4b19-a5f6-86763db488e6').data('DateTimePicker').date('');
	});
										</script>

									</div>
								</form>
							</div>
							<div class="modal-footer">
								<button id="btnFollowUpDate" class="btn btn-primary modal-enter-button enter-button" OnClick="$('#followUpDateModal').data('bs.modal').save();">Save</button>
								<button class="btn btn-default" data-dismiss="modal">Cancel</button>
							</div>
						</div>
					</div>
				</div>

				<script type="text/javascript">
					//ClearValueFollowUpDateModal : ClearValueModal
        (function ($) {
            'use strict';

            var _parent = $.fn.clearvaluemodal;
            var _followUpDate = '';

            var ClearValueFollowUpDateModal = function (element, options) {
                _parent.Constructor.apply(this, arguments);

                this.$element.on('show.bs.modal', function () {
                    $(this).find("#FollowUpDate").val(_followUpDate);
                    $(this).find(".validation-summary-errors ul li").remove();
                }).on('shown.bs.modal', function () {
                });
            };

            ClearValueFollowUpDateModal.prototype = $.extend({}, _parent.Constructor.prototype);

            ClearValueFollowUpDateModal.prototype.clearvaluemodalparent = function () {
                var args = $.makeArray(arguments),
                    method = args.shift();
                _parent.Constructor.prototype[method].apply(this, args)
            };

            ClearValueFollowUpDateModal.prototype.show = function (keys, followUpDate) {
                _followUpDate = (followUpDate) ? followUpDate : '3/15/2022 8:44 AM';
                this.clearvaluemodalparent('show', null, keys);
            }

            ClearValueFollowUpDateModal.prototype.save = function () {

                var followUpDateModal = this;
                var $followUpDateModalElement = this.$element;
                var isValid = $('#frmFollowUpDate')[0].checkValidity();

                if (isValid) {
                    $followUpDateModalElement.find('button').prop('disabled', true);
                    $followUpDateModalElement.find(".validation-summary-errors ul li").remove();

                    spinnerOn();
                    var followUpDate = $('#FollowUpDate').val();
                    var wrapper = { orderKeys: this.getKeys(), followUpDate: followUpDate };
                    $.ajax({
                        url: '/Orders/Items/UserActions/FollowUpDate',
                        type: 'POST',
                        cache: false,
                        data: JSON.stringify(wrapper),
                        contentType: "application/json",
                        dataType: 'json'
                    })
                    .done(function (results) {
                        //hide before showing result modal to keep the default button correct
                        followUpDateModal.hide();
                        showResultModal("Set Follow-up Time Results", "[total] item(s) have set a follow up time for " + followUpDate + ".", results);
                        $followUpDateModalElement.trigger('done.cvc.bs.modal', followUpDate);
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        spinnerOff();
                        handleException(jqXHR, textStatus, errorThrown);
                    })
                    .always(function () {
                        $followUpDateModalElement.find('button').prop('disabled', false);
                        spinnerOff();
                    });
                } else {
                    $('#frmFollowUpDate')[0].reportValidity();
                }
            }

            function displayValidationErrors(result) {
                var $list = $('#frmFollowUpDate').find('div.validation-summary-errors ul');
                $list.find('li').remove();
                for (var i = 0; i < result.length; i++)
                    $list.append('<li>' + result[i].ErrorMessage + '</li>');
                window.scrollTo(0, document.body.scrollHeight);
            }

            var old = $.fn.clearvaluesetfollowupdatemodal;

            $.fn.clearvaluesetfollowupdatemodal = function (option, _relatedTarget) {
                return this.each(function () {
                    var $this = $(this),
                        data = $this.data('bs.modal'),
                        options = $.extend({}, ClearValueFollowUpDateModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                    if (!data) {
                        $this.data('bs.modal', (data = new ClearValueFollowUpDateModal(this, options)));
                    }
                    if (typeof option === 'string') {
                        data[option](_relatedTarget);
                    } else if (options.show) {
                        data.show(_relatedTarget);
                    }
                });
            };

            $.fn.clearvaluesetfollowupdatemodal.Constructor = ClearValueFollowUpDateModal;

            $.fn.clearvaluesetfollowupdatemodal.noConflict = function () {
                $.fn.clearvaluesetfollowupdatemodal = old;
                return this;
            };

        })(jQuery);

    $(document).ready(function () {
        $('#followUpDateModal').clearvaluesetfollowupdatemodal();
    });

				</script>

				<div id="actionButtons" class="col-md-12 clearfix">
					<div class="orderButtons clearfix">
						<button class="btn btn-default btn-sm" onclick="editOrder()">Edit Order</button>
						<button class="btn btn-default btn-sm" OnClick="confirmOrderItem()">Confirm</button>
						<div class="btn-group">
							<button id="btnAssignment" type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Assignment<span class="caret"></span>
            </button>
							<ul class="dropdown-menu" style="text-align: left;">
								<li><a href="#" onclick="assignOrderItem()">Re-assign</a></li>
								<li><a href="#" onclick="vendorAcceptOrderItem()">Vendor Accept</a></li>
								<li><a href="#" onclick="vendorDeclineOrderItem()">Vendor Decline</a></li>
							</ul>
						</div>
						<button class="btn btn-default btn-sm" onclick="cancelOrderItem()">Cancel</button>
						<button class="btn btn-default btn-sm" onclick="upgradeOrderItem()">Upgrade</button>
						<button class="btn btn-default btn-sm" onclick="restoreOrderItem()">Restore</button>
						<button class="btn btn-default btn-sm" onclick="checkInOrOutOrderItem()" >Check Out</button>
						<button class="btn btn-default btn-sm" onclick="showRouteModal()">Route</button>
						<button class="btn btn-default btn-sm" onclick="extendOrderItemDueDate()">Due Date</button>
						<button class="btn btn-default btn-sm" onclick="showHoldModal(true)">
            Put on Hold
        </button>
						<button class="btn btn-default btn-sm" onclick="processEscalation(true)">
            Managerial Assistance
        </button>
						<div class="btn-group">
							<button id="btnSetFollowUpDate" type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Set Follow-up<span class="caret"></span>
            </button>
							<ul class="dropdown-menu" style="text-align: left;">
								<li><a href="#" onclick="setFollowUpDate('3/15/2022 12:44 PM');">In four hours</a></li>
								<li><a href="#" onclick="setFollowUpDate('3/15/2022 4:00 PM');">At the end of the
										day</a></li>
								<li><a href="#" onclick="setFollowUpDate('3/16/2022 12:00 AM');">In the morning</a></li>
								<li><a href="#" onclick="setFollowUpDate();">Specify a date and time</a></li>
							</ul>
						</div>

						<div class="btn-group">
							<button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="multiselect-selected-text">Pipeline Indicators&nbsp;</span> <b class="caret"></b>
            </button>
							<dl id="Pipeline" class="multiselect-container dropdown-menu"
								onchange="savePipeLineIndicator();">
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> Back Quote</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input onclick="if (event.ctrlKey) { $(this).prop('checked', false); savePipeLineIndicator(); }" name="Back_Quote" type="radio"  value="Back_Quote_Client_Approved" /> Back Quote Client Approved</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input onclick="if (event.ctrlKey) { $(this).prop('checked', false); savePipeLineIndicator(); }" name="Back_Quote" type="radio"  value="Back_Quote_Client_Denied" /> Back Quote Client Denied</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input onclick="if (event.ctrlKey) { $(this).prop('checked', false); savePipeLineIndicator(); }" name="Back_Quote" type="radio"  value="Back_Quote_Requested" /> Back Quote Requested</label>
									</a>
								</dd>
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> Order Quotes</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Live_Quote_Only_Request" /> Live Quote Only Request</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Live_Quoted_Order" /> Live Quoted Order</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Quote_Only_Request" /> Quote Only Request</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Quoted_Reassign" /> Reassignment Quoted Orders</label>
									</a>
								</dd>
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> Systemic</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Fee_Turn_Time_Quoted_Order" /> Fee/Turn Time Quoted Order</label>
									</a>
								</dd>
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> Test Group 999</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Test 123" /> Test2222</label>
									</a>
								</dd>
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> Unresponsive Vendor</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Unresponsive_Vendor" /> Unresponsive Vendor</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Unresponsive_Vendor_Escalation" /> Unresponsive Vendor – Escalation</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Unresponsive_Vendor_Reassign" /> Unresponsive Vendor - Reassign</label>
									</a>
								</dd>
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> VO-MGR</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input onclick="if (event.ctrlKey) { $(this).prop('checked', false); savePipeLineIndicator(); }" name="VO-MGR" type="radio"  value="VO_MGR_Approval_Requested" /> VO-MGR Approval Requested</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input onclick="if (event.ctrlKey) { $(this).prop('checked', false); savePipeLineIndicator(); }" name="VO-MGR" type="radio"  value="VO_MGR_Response_Provided" /> VO-MGR Response Provided</label>
									</a>
								</dd>
								<dt class="multiselect-item" onclick="event.stopPropagation(); makeMeFixedIfNeeded();">
									<b class="caret"></b> No Group Allocation</dt>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="36282Testing" /> 36282Testingnew indicator</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Awaiting_Client_Outstanding_Item" /> Awaiting Client Outstanding Item</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Awaiting_Vendor_Outstanding_Item" /> Awaiting Vendor Outstanding Item</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Client_Escalation" /> Client Escalation</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="Engaged_Panel_Management" /> Engaged Panel Management</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="False_Vendor_ETA" /> False Vendor ETA</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="False_Vendor_ETA_Reassign" /> False Vendor ETA – Reassign</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="POC_Contacted" /> POC Contacted</label>
									</a>
								</dd>
								<dd class="multiselect-item">
									<a>
										<label onclick="event.stopPropagation();"><input name="PipeLineIndicators" type="checkbox"  value="QA_Rush" /> QA Rush</label>
									</a>
								</dd>
							</dl>
						</div>

						<button class="btn btn-default btn-sm" onclick="showDoNotReleaseModal(true)">Do Not Release</button>


						<div class="btn-group">
							<button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Quality Control&nbsp;
                <span class="caret"></span>
            </button>
							<ul class="dropdown-menu" style="text-align: left;">
								<li style="display:none">
									<a target="_blank">Review Report</a>
								</li>
								<li style="display:none">
									<a href="https://formstest.valuationconnect.com/home/FormIndex?orderID=4865952&amp;orderItemID=1&amp;operationMode=qualitycontrol&amp;token=x%2f6%2bkwwlLetxMSMmgXtRUJy3SyTOQIYD9ZOPDMW5%2bCxwkMoHcmF230n5No9%2fnQ7n54oUAjmzdfsIZCdFvcjhXj4T9juybUrPf74IxpWkYVs%3d"
										target="_blank">
										Quality Control Worksheet
									</a>
								</li>
								<li><a href="#" onclick="approveOrderItem()">Approve</a></li>
							</ul>
						</div>
					</div>
				</div>

				<script type="text/javascript">
					$(document).ready(function () {

        $('#followUpDateModal').on('done.cvc.bs.modal', function (e, followUpDate) {
            currentFollowUpDate = followUpDate;
        });
                 $('input:checkbox[value="False_Vendor_ETA_Reassign"]').prop('checked', true);
                 $('input:radio[value="False_Vendor_ETA_Reassign"]').prop('checked', true);
                 $('input:checkbox[value="Live_Quote_Only_Request"]').prop('checked', true);
                 $('input:radio[value="Live_Quote_Only_Request"]').prop('checked', true);
                 $('input:checkbox[value="Unresponsive_Vendor"]').prop('checked', true);
                 $('input:radio[value="Unresponsive_Vendor"]').prop('checked', true);

        $('dt').click(function (e) {
            $(this).nextUntil('dt').toggle();
        });
        $('dd').hide();

        $('#requestedActionModal').on('done.cvc.bs.modal', function (modal) {
            $('#status_history').trigger("reloadGrid");
            $('#alertsDiv').load('/Orders/4865952/Items/1/Alerts');
		    $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
		    $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
            });

        $('#acceptModal').on('done.cvc.bs.modal', function () {
            $('#assignmentTabContent').load('/Orders/4865952/Items/1/AssignmentHistory');
            });

        $('#declineModal').on('done.cvc.bs.modal', function () {
            $('#assignmentTabContent').load('/Orders/4865952/Items/1/AssignmentHistory');
            });

        $('#conditionalAcceptModal').on('done.cvc.bs.modal', function () {
            $('#assignmentTabContent').load('/Orders/4865952/Items/1/AssignmentHistory');
            });
        })

    function showRouteModal() {
        var orderKeys = [];
        orderKeys.push('4865952.1');

        $('#routeModal').data('bs.modal').show(orderKeys, '90');
    }

    function savePipeLineIndicator() {
        var pipelineIndicatorIDs = "";
        $("#Pipeline :checkbox:checked, :radio:checked").each(function () {
            if (pipelineIndicatorIDs.length == 0)
                pipelineIndicatorIDs = $(this).val();
            else
                pipelineIndicatorIDs = pipelineIndicatorIDs + ',' + $(this).val();
          });

        var pipelineIndicatorParams = { orderID: 4865952, orderItemID: 1, pipeLineIndicatorIDs: pipelineIndicatorIDs };
        var url = '/Orders/SetPipeLineIndicatorValue';
        spinnerOn();
        $.ajax({
            url: url,
            type: 'POST',
            cache: false,
            data: JSON.stringify(pipelineIndicatorParams),
            contentType: "application/json; charset=utf-8",
            dataType: 'json'
        })
        .done(function (results) {
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
            spinnerOff();
            handleException(jqXHR, textStatus, errorThrown);
        })
        .always(function () {
            spinnerOff();
        });
    }
    function editOrder() {
             window.location = '/Orders/4865952/Items/1';
    }

    function confirmOrderItem() {
        spinnerOn();
        $.ajax({
            url: '/Orders/4865952/Items/1/UserActions/Confirm',
            type: 'POST',
            cache: false,
            contentType: "application/x-www-form-urlencoded",
            dataType: 'json'
        })
        .done(function (results) {
            showResultModal("Confirm Order Item Results", "", results);
            $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
            $('#statusTabContent').load('/Orders/4865952/Items/1/StatusHistory');
            $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
            spinnerOff();
            handleException(jqXHR, textStatus, errorThrown);
        })
        .always(function () {
            spinnerOff();
        });
    }

    function assignOrderItem() {
        window.location = '/Orders/4865952/Items/1/Vendors';
        
    }

    function vendorAcceptOrderItem() {
                     $('#acceptModal').data('bs.modal').show();
    }

    function vendorDeclineOrderItem() {
             $('#declineModal').data('bs.modal').show();
    }

    function cancelOrderItem() {
             $('#cancelModal').data('bs.modal').show(['4865952.1']);
    }

    function upgradeOrderItem() {
             $('#upgradeOrderItemModal').data('bs.modal').show('4865952.1');
    }

    function restoreOrderItem() {
        spinnerOn();
        $.ajax({
            url: '/Orders/4865952/Items/1/UserActions/Restore',
            type: 'POST',
            cache: false,
            contentType: "application/x-www-form-urlencoded",
            dataType: 'json'
        })
        .done(function (results) {
            showResultModal("Restore Results", "[total] item(s) were restored.", results);
            $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
            $('#statusTabContent').load('/Orders/4865952/Items/1/StatusHistory');
            $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
            spinnerOff();
            handleException(jqXHR, textStatus, errorThrown);
        })
        .always(function () {
            spinnerOff();
        });
    }

    function checkInOrOutOrderItem(){
        var isCheckOut = true;
        if (isCheckOut)
            checkOutOrderItem();
        else
            checkInOrderItem();
    }

    function checkOutOrderItem()
    {
        var selectedRowIds = ['4865952.1'];
        var checkOutForOthers = true;
        var currentUser = 'SLambu';

        $('#checkoutModal').data('bs.modal').show(selectedRowIds, currentUser, checkOutForOthers, currentUser);
    }

    function checkInOrderItem(){

        var orderKeys = ['4865952.1'] ;
        var url = '/Orders/Items/UserActions/CheckIn';

        spinnerOn();
        $.ajax({
            url: url,
            type: 'POST',
            cache: false,
            data: JSON.stringify(orderKeys),
            contentType: "application/json",
            dataType: 'json'
        })
        .done(function (results) {
            showResultModal("Check In Results","[total] item(s) were checked in.", results);
            $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
            $('#statusTabContent').load('/Orders/4865952/Items/1/StatusHistory');
            $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
            spinnerOff();
            handleException(jqXHR, textStatus, errorThrown);
        })
        .always(function () {
            spinnerOff();
        });
    }

    function extendOrderItemDueDate(){
        $('#extendOrderItemDueDateModal').data('bs.modal').show()
    }

    function showHoldModal(holdAction){
        var orderKeys = ['4865952.1'];
        $('#holdModal').data('bs.modal').show(orderKeys, holdAction);
    }
     
    function showDoNotReleaseModal(DoNotReleaseAction){
        var orderKeys = ['4865952.1'];
        $('#DoNotRelease').data('bs.modal').show(orderKeys, DoNotReleaseAction);
    }
    function processEscalation(needsReview)
    {
        var orderKeys = ['4865952.1'];
        var comment = "";
        var reason = "";

        $('#reviewModal').data('bs.modal').show(orderKeys, needsReview, comment, reason);
    }

    var currentFollowUpDate = '3/15/2022 8:44 AM';
    function setFollowUpDate(followUpDate) {
        var orderKeys = ['4865952.1'];
        if (followUpDate === undefined) {
            // Show Modal
            followUpDate = currentFollowUpDate;

            $('#followUpDateModal').data('bs.modal').show(orderKeys, followUpDate);
        }
        else {
            console.log(followUpDate);
            // Set Follow Up Date
            spinnerOn();
            var wrapper = { orderKeys: orderKeys, followUpDate: followUpDate };
            $.ajax({
                url: '/Orders/Items/UserActions/FollowUpDate',
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
            .done(function (results) {
                showResultModal("Set Follow-up Time Results", "[total] item(s) have set a follow up time for " + followUpDate + ".", results);
                currentFollowUpDate = followUpDate;
                $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                spinnerOff();
                handleException(jqXHR, textStatus, errorThrown);
            })
            .always(function () {
                spinnerOff();
            });
        }
    }

    function showRequestedActionModal(){
        $('#requestedActionModal').data('bs.modal').show();
    }

    

    function approveOrderItem() {
        spinnerOn();
        $.ajax({
            url: "/Orders/4865952/Items/1/UserActions/Approve/Permission",
            type: 'GET',
            cache: false,
            dataType: 'json'
        })
        .done(function (result) {
            if (result.Success)
                window.location = '/Orders/4865952/Items/1/Valuation/Approval';
            else
                showResultModal('Approve Order Item Result', '', [result]);
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
            spinnerOff();
            handleException(jqXHR, textStatus, errorThrown);
        })
        .always(function () {
            spinnerOff();
        });
    }

    $('#followUpDateModal').on('done.cvc.bs.modal', function () {
        $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
    });

    function makeMeFixedIfNeeded() {

        let indicatorsList = $('#Pipeline');

        setTimeout(function() {

            let lastGroupPos = $("#Pipeline > dt").last().length > 0 ? $("#Pipeline > dt").last().offset().top + $("#Pipeline > dt").last().outerHeight() : 0;
            let lastVisibleIndicatorPos = $("#Pipeline > dd a label:visible").last().length > 0 ? $("#Pipeline > dd a label:visible").last().offset().top + $("#Pipeline > dd a label:visible").last().outerHeight() : 0;
            let lastPipelineItemPos = Math.max(lastGroupPos, lastVisibleIndicatorPos);

            let pixelsToBottomEdge = window.innerHeight - lastPipelineItemPos;
            let suggestedHeight = lastPipelineItemPos - indicatorsList.offset().top;
            if (pixelsToBottomEdge <= 50) {
                indicatorsList.addClass('scroll-Y');
            }
            else {
                indicatorsList.removeClass('scroll-Y');
                indicatorsList.css({ "height": suggestedHeight+5});
            }
        },
            15);
    }

				</script>
			</div>

			<div id="acceptModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Accept" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
							Select Vendor License to Confirm Acceptance
						</div>
						<div class="modal-body">
							<form id="frmAcceptOrder" class="form-horizontal">
								<div class="form-group" id="validationGroup">
									<div class="col-md-offset-2 col-md-9" style="color: red;">
										<div class="validation-summary-errors">
											<ul></ul>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-1 align-right">
									</div>
									<div class="col-md-10">
										<p>
											The <i>License</i> list below indicates the specific licensee expected to
											perform the
											work. This list automatically excludes any licenses under the specified
											vendor that
											have expired or have been excluded by the client placing this order. It is
											not required
											that the licensee be known at the time of acceptance, but this information
											will be
											stored if provided and pre-selected for the quality assurance reviewer.
										</p>
									</div>
								</div>
								<div class="form-group">
									<label class="control-label col-md-2" for="vendorLicenseID">License:</label>
									<div class="controls col-md-9">
										<select class="form-control" id="vendorLicenseID" name="vendorLicenseID"><option value="">(License Presently Unknown)</option>
</select>
									</div>
								</div>

							</form>
						</div>
						<div class="modal-footer">
							<button id="btnAccept" class="btn btn-default" onclick="$('#acceptModal').data('bs.modal').save();">Confirm Vendor License</button>
							<button class="btn btn-default" data-dismiss="modal">Cancel</button>
						</div>
					</div>
				</div>
			</div>

			<script type="text/javascript">
				// ClearValueVendorAcceptModal : ClearValueModal
	(function ($) {
		'use strict';

		var _parent = $.fn.clearvaluemodal;

		var ClearValueVendorAcceptModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);            

			this.$element.on('show.bs.modal', function (e) {

                var modal = $(this).data('bs.modal');


			}).on('shown.bs.modal', function () {
				$(this).find('#vendorLicenseID').focus();
			});
		};

		ClearValueVendorAcceptModal.prototype = $.extend({}, _parent.Constructor.prototype);

		ClearValueVendorAcceptModal.prototype.clearvaluemodalparent = function () {
			var args = $.makeArray(arguments),
				method = args.shift();
			_parent.Constructor.prototype[method].apply(this, args)
		};

		ClearValueVendorAcceptModal.prototype.show = function (keys) {
			this.clearvaluemodalparent('show', null, keys);
		};

		ClearValueVendorAcceptModal.prototype.save = function () {

			var acceptModal = this;
			var $acceptModalElement = this.$element;

			$acceptModalElement.find('button').prop('disabled', true);

			spinnerOn();
			$.ajax({
				url: '/Orders/4865952/Items/1/UserActions/Accept',
				type: 'POST',
				cache: false,
				data: $('#frmAcceptOrder').serialize(),
				contentType: "application/x-www-form-urlencoded",
				dataType: 'json'
			})
			.done(function (results) {
                acceptModal.hide();
                var message = 'Order accepted for ' + '4865952' + '.' + '1';
			    showResultModal("Vendor Accept Results", message, [results]);
			    $acceptModalElement.trigger('done.cvc.bs.modal');
			})
			.fail(function (jqXHR, textStatus, errorThrown) {
				spinnerOff();
				handleException(jqXHR, textStatus, errorThrown);
			})
			.always(function () {
				$acceptModalElement.find('button').prop('disabled', false);
				spinnerOff();
			});
		};

		var old = $.fn.clearvaluevendoracceptmodal;

		$.fn.clearvaluevendoracceptmodal = function (option, _relatedTarget) {
			return this.each(function () {
				var $this = $(this),
				data = $this.data('bs.modal'),
				options = $.extend({}, ClearValueVendorAcceptModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

				if (!data) {
					$this.data('bs.modal', (data = new ClearValueVendorAcceptModal(this, options)));
				}
				if (typeof option === 'string') {
					data[option](_relatedTarget);
				} else if (options.show) {
					data.show(_relatedTarget);
				}
			});
		};

		$.fn.clearvaluevendoracceptmodal.Constructor = ClearValueVendorAcceptModal;

		$.fn.clearvaluevendoracceptmodal.noConflict = function () {
			$.fn.clearvaluevendoracceptmodal = old;
			return this;
	    };
	})(jQuery);

    $(document).ready(function () {
        $('#acceptModal').clearvaluevendoracceptmodal();        
    })

			</script>

			<div id="conditionalAcceptModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Accept"
				aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
							Vendor Conditions for Order Acceptance
						</div>
						<div class="modal-body">
							<form id="frmConditionalAccept" class="form-horizontal">
								<div class="form-group">
									<div class="col-md-10 col-md-offset-1">
										<p>The assigned vendor will accept the order under the following conditions:</p>
									</div>
								</div>

								<div class="form-group">
									<label class="control-label col-md-3" for="ConditionalFee">Fee:</label>
									<label class="col-md-3" for="ConditionalFee" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">No change.</label>

									<label class="control-label col-md-2" for="ConditionalDate">Due Date:</label>
									<label class="col-md-3" for="ConditionalDate" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">No change.</label>

									<label class="control-label col-md-3" for="ConditionalComment">Reason:</label>


								</div>
								<div class="form-group" id="validationGroup">
									<div class="col-md-offset-2 col-md-9" style="color: red;">
										<div class="validation-summary-errors">
											<ul></ul>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-1 align-right" style="">
									</div>
									<div class="col-md-10">
										<p>
											The <i>License</i> list below indicates the specific licensee expected to
											perform the
											work. This list automatically excludes any licenses under the specified
											vendor that
											have expired or have been excluded by the client placing this order. It is
											not required
											that the licensee be known at the time of acceptance, but this information
											will be
											stored if provided and pre-selected for the quality assurance reviewer.
										</p>
									</div>
								</div>
								<div class="form-group">
									<label class="control-label col-md-3" for="condVendorLicenseID">License:</label>
									<div class="controls col-md-8">
										<select class="form-control" id="condVendorLicenseID" name="condVendorLicenseID"><option value="">(License Presently Unknown)</option>
</select>
									</div>
								</div>

							</form>
						</div>
						<div class="modal-footer">
							<button id="acceptConditional" class="btn btn-default" onclick="$('#conditionalAcceptModal').data('bs.modal').accept();">Accept Vendor Conditions</button>
							<button id="declineConditional" class="btn btn-default" onclick="$('#conditionalAcceptModal').data('bs.modal').decline();">Decline Vendor Conditions</button>
							<button class="btn btn-default" data-dismiss="modal">Cancel</button>
						</div>
					</div>
				</div>
			</div>

			<script type="text/javascript">
				// ClearValueVendorConditionalAcceptModal : ClearValueModal
	(function ($) {
		'use strict';

		var _parent = $.fn.clearvaluemodal;

		var ClearValueVendorConditionalAcceptModal = function (element, options) {
			_parent.Constructor.apply(this, arguments);

            this.$element.on('show.bs.modal', function (e) {


                var modal = $(this).data('bs.modal');

            }).on('shown.bs.modal', function () {
                $(this).find('#condVendorLicenseID').focus();
			});
		};

		ClearValueVendorConditionalAcceptModal.prototype = $.extend({}, _parent.Constructor.prototype);

		ClearValueVendorConditionalAcceptModal.prototype.clearvaluemodalparent = function () {
			var args = $.makeArray(arguments),
				method = args.shift();
			_parent.Constructor.prototype[method].apply(this, args)
		};

        ClearValueVendorConditionalAcceptModal.prototype.show = function (keys) {
			this.clearvaluemodalparent('show', null, keys);
		};

		ClearValueVendorConditionalAcceptModal.prototype.accept = function () {

			var conditionalAcceptModal = this;
			var $conditionalAcceptModalElement = this.$element;

			$conditionalAcceptModalElement.find('button').prop('disabled', true);

			spinnerOn();
			$.ajax({
				url: '/Orders/4865952/Items/1/UserActions/Accept',
				type: 'POST',
				cache: false,
				data: $('#frmConditionalAccept').serialize(),
				contentType: "application/x-www-form-urlencoded",
				dataType: 'json'
			})
			.done(function (results) {
                conditionalAcceptModal.hide();
                var message = 'Vendor accepted for ' + '4865952' + '.' + '1';
			    showResultModal("Vendor Accept Results", message, [results]);
			    $conditionalAcceptModalElement.trigger('done.cvc.bs.modal');
			})
			.fail(function (jqXHR, textStatus, errorThrown) {
				spinnerOff();
				handleException(jqXHR, textStatus, errorThrown);
			})
			.always(function () {
				$conditionalAcceptModalElement.find('button').prop('disabled', false);
				spinnerOff();
			});
        };

        ClearValueVendorConditionalAcceptModal.prototype.decline = function () {

			var conditionalAcceptModal = this;
			var $conditionalAcceptModalElement = this.$element;

			$conditionalAcceptModalElement.find('button').prop('disabled', true);

			spinnerOn();
			$.ajax({
				url: '/Orders/4865952/Items/1/UserActions/Decline',
				type: 'POST',
				cache: false,
                data: $('#frmConditionalAccept').serialize() + '&declineReasonID=CONDITIONAL-ACCEPTANCE-DECLINED',
				contentType: "application/x-www-form-urlencoded",
				dataType: 'json'
			})
			.done(function (results) {
                conditionalAcceptModal.hide();
                var message = 'Order declined for ' + '4865952' + '.' + '1';
                showResultModal("Vendor Decline Results", message, [results]);
                $conditionalAcceptModalElement.trigger('done.cvc.bs.modal');
			})
			.fail(function (jqXHR, textStatus, errorThrown) {
				spinnerOff();
				handleException(jqXHR, textStatus, errorThrown);
			})
			.always(function () {
				$conditionalAcceptModalElement.find('button').prop('disabled', false);
				spinnerOff();
			});
		};

		var old = $.fn.clearvaluevendorconditionalacceptmodal;

		$.fn.clearvaluevendorconditionalacceptmodal = function (option, _relatedTarget) {
			return this.each(function () {
				var $this = $(this),
				data = $this.data('bs.modal'),
				options = $.extend({}, ClearValueVendorConditionalAcceptModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

				if (!data) {
					$this.data('bs.modal', (data = new ClearValueVendorConditionalAcceptModal(this, options)));
				}
				if (typeof option === 'string') {
					data[option](_relatedTarget);
				} else if (options.show) {
					data.show(_relatedTarget);
				}
			});
		};

		$.fn.clearvaluevendorconditionalacceptmodal.Constructor = ClearValueVendorConditionalAcceptModal;

		$.fn.clearvaluevendorconditionalacceptmodal.noConflict = function () {
			$.fn.clearvaluevendorconditionalacceptmodal = old;
			return this;
	    };
	})(jQuery);

    $(document).ready(function () {
        $('#conditionalAcceptModal').clearvaluevendorconditionalacceptmodal();        
    })

			</script>
			<div id="declineModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Decline"
				aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
							Confirm Vendor Assignment Decline
						</div>
						<div class="modal-body">
							<form id="frmDeclineOrder" class="form-horizontal">
								<div class="form-group" id="validationGroup">
									<div class="col-md-offset-2 col-md-9" style="color: red;">
										<div class="validation-summary-errors">
											<ul></ul>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-1 align-right">
										<img src="/Content/images/help.png" alt="" />
                        </div>
										<div class="col-md-10">
											<p>
												Please select the vendor's <i>Reason</i> for declining, either from the
												standard list of
												reasons a vendor will cite, or a textual explanation if necessary.
											</p>
										</div>
									</div>
									<div class="form-group">
										<label class="control-label col-md-3" for="declineReasonID">Reason:</label>
										<div class="controls col-md-8">
											<select class="form-control" id="declineReasonID" name="declineReasonID"><option value="CANNOT-MEET-TURN-AROUND-TIME">Cannot Meet Turn Around Time</option>
<option value="COMPLEX/COMPETENCY">Complex/Competency</option>
<option value="FEE-NOT-ACCEPTABLE">Fee Not Acceptable</option>
<option value="REQUESTED-PRODUCT-NOT-OFFERED">Requested Product Not Offered</option>
<option value="SUBJECT-PROPERTY-LIES-OUTSIDE-SERVICE-AREA">Subject Property Lies Outside Service Area</option>
<option value="TOO-BUSY-TO-ACCOMMODATE-THIS-ASSIGNMENT">Too Busy to Accommodate this Assignment</option>
<option value="UNAVAILABLE-FOR-WORK-AT-THIS-TIME">Unavailable for Work at this Time</option>
<option value="UNRESP-VENDOR">Vendor Unresponsive</option>
</select>
										</div>
									</div>

									<div class="form-group">
										<label class="control-label col-md-3" for="declineComment">Description:</label>
										<div class="controls col-md-8">
											<textarea class="form-control" cols="20" id="declineComment" maxlength="2000" name="declineComment" rows="4" style="resize: none;">
</textarea>
										</div>
									</div>

							</form>
						</div>
						<div class="modal-footer">
							<button id="declineButton" class="btn btn-default" onclick="$('#declineModal').data('bs.modal').save()">Vendor Declined Order</button>
							<button class="btn btn-default" data-dismiss="modal">Cancel</button>
						</div>
					</div>
				</div>
			</div>

			<script>
				// ClearValueVendorDeclineModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;

        var ClearValueVendorDeclineModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            this.$element.find('label[for=declineComment]').css('margin-top', '32px');

            this.$element.find('#declineReasonID').on('change', function () {
                if ($(this).val() == "OTHER") {
                    $('#declineComment').prop('disabled', false);
                    $('#declineComment').prop('required', true);
                }
                else {
                    $('#declineComment').prop('disabled', true);
                    $('#declineComment').prop('required', false);
                }
            })

            this.$element.on('show.bs.modal', function (e) {
                $(this).find('#declineReasonID').val('OTHER');
                $(this).find('#declineReasonText').val('Other');
                $(this).find("#declineComment").prop('disabled', false);
                $(this).find("#declineComment").prop('required', true);
                $(this).find("#declineComment").val('');
                var modal = $(this).data('bs.modal');
            }).on('shown.bs.modal', function () {
                $(this).find('#declineReasonID').focus();
            });
        };

        ClearValueVendorDeclineModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueVendorDeclineModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
				method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        ClearValueVendorDeclineModal.prototype.show = function (keys) {
            this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueVendorDeclineModal.prototype.save = function () {

            var declineModal = this;
            var $declineModalElement = this.$element;
            var isValid = $('#frmDeclineOrder')[0].checkValidity();

            if (isValid) {
                $declineModalElement.find('button').prop('disabled', true);

                spinnerOn();
                $.ajax({
                    url: '/Orders/4865952/Items/1/UserActions/Decline',
                    type: 'POST',
                    cache: false,
                    data: $('#frmDeclineOrder').serialize(),
                    contentType: "application/x-www-form-urlencoded",
                    dataType: 'json'
                })
                .done(function (results) {
                    declineModal.hide();
                    $("#statusHistoryAddVendorNote").prop('disabled', true);
                    var message = 'Vendor declined for ' + '4865952' + '.' + '1';
                    showResultModal("Vendor Decline Results", message, [results]);
                    $declineModalElement.trigger('done.cvc.bs.modal');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    spinnerOff();
                    handleException(jqXHR, textStatus, errorThrown);
                })
                .always(function () {
                    $declineModalElement.find('button').prop('disabled', false);
                    spinnerOff();
                });
            }
            else {
                $('#frmDeclineOrder')[0].reportValidity();
            }
        };

        var old = $.fn.clearvaluevendordeclinemodal;

        $.fn.clearvaluevendordeclinemodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
				data = $this.data('bs.modal'),
				options = $.extend({}, ClearValueVendorDeclineModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueVendorDeclineModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvaluevendordeclinemodal.Constructor = ClearValueVendorDeclineModal;

        $.fn.clearvaluevendordeclinemodal.noConflict = function () {
            $.fn.clearvaluevendordeclinemodal = old;
            return this;
        };

    })(jQuery);

    $(document).ready(function () {
        $('#declineModal').clearvaluevendordeclinemodal();
    })

			</script>


			<div id="cancelModal" class="modal order-grid-modal" tabindex="-1" role="dialog" aria-labelledby="Cancel"
				aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
							Cancel Order Item(s)
						</div>
						<div class="modal-body">
							<div class="form-horizontal">
								<input id="cancelOrderID" name="cancelOrderID" type="hidden" value="" />
								<input id="cancelOrderItemID" name="cancelOrderItemID" type="hidden" value="" />
								<div class="form-group">
									<label class="control-label col-md-3" for="cancelReason">Reason:</label>
									<div class="controls col-md-9">
										<select class="form-control" id="cancelReason" name="cancelReason"><option value="AAV-1">AAV - 1 Element</option>
<option value="AAV-2">AAV - 2 Elements</option>
<option value="AAV-APPRAISER">AAV - Appraiser</option>
<option value="AAV-PCR">AAV - PCR</option>
<option value="ASSIGNED-TO-ANOTHER-PROVIDER">Assigned to Another Provider</option>
<option value="BORROWER-NOT-AVAILABLE">Borrower not available for inspection – will re-order later</option>
<option value="BORROWER-WITHDREW-LOAN-APPLICATION">Borrower Withdrew Loan Application</option>
<option value="CLIENT-REQUEST">Client Requested Cancellation</option>
<option value="CUSTOMER-REQUEST">Customer Requested Cancellation</option>
<option value="CUSTOMER-UNRESPONSIVE">Customer Unresponsive</option>
<option value="DECLINE-NO-COVERAGE/DATA">Decline – No Coverage/Data</option>
<option value="ITEM-IS-A-DUPLICATE">Duplicate Request</option>
<option value="INCORRECT-LOAN-NUMBER">Loan Number is Incorrect</option>
<option value="NO-PROPERTY-ACCESS">No Access to Property</option>
<option value="COVERAGE-UNAVAILABLE">No coverage</option>
<option value="DATA-UNAVAILABLE">No-Hit</option>
<option value="INCORRECT-PRODUCT">Product Ordered is Incorrect</option>
<option value="PROPERTY-INCOMPLETE">Subject Property is Incomplete</option>
<option value="REPAIRS-INCOMPLETE">Subject Property Repairs are Incomplete</option>
<option value="INVALID-PROPERTY-ADDRESS">Supplied Property Address is Invalid</option>
<option value="SYSTEM-DUP-CANCEL-NO-POST">System Dup - Cancel No Post</option>
<option value="UNKNOWN-REASON-FOR-CANCELLATION">Unknown Reason For Cancellation</option>
<option value="UPGRADED">Upgraded to another service</option>
</select>
									</div>
								</div>


								<div class="form-group">
									<label class="control-label col-md-3" for="cancelClientFee">Client Fee:</label>
									<div class="controls col-md-3">
										<input class="form-control" id="cancelClientFee" name="cancelClientFee" type="text" value="" />
	</div>
									</div>

									<div class="form-group">
										<label class="control-label col-md-3" for="cancelVendorFee">Vendor Fee:</label>
										<div class="controls col-md-3">
											<input class="form-control" id="cancelVendorFee" name="cancelVendorFee" type="text" value="" />
	</div>
										</div>

									</div>
								</div>
								<div class="modal-footer">


									<button ID="CancelButton" class="btn btn-default cancel-modal-btn">Cancel Order(s)</button>
									<button class="btn btn-default cancel-modal-btn" data-dismiss="modal">Cancel</button>
								</div>
							</div>
						</div>
					</div>

					<script type="text/javascript">
						// ClearValueVendorManagementCancelModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        
        function getCancellationFees() {
            //Some Code url, #cancelClientFee and #cancelVendorFee are commented on 22-april-2020, by priyanka sharma in order to make cancelfeetype by default manual enter fees and cancelclientfee and cancelvendorfee should be 0 in this case.
           // var url = '/Orders/' + $('#cancelOrderID').val() + '/Items/' + $('#cancelOrderItemID').val() + '/Fees/Cancellation?cancelFeeType=' + $('#cancelFeeType').val();
            var url = '/Orders/' + $('#cancelOrderID').val() + '/Items/' + $('#cancelOrderItemID').val() + '/Fees/Cancellation?cancelFeeType=' + 3;
            
    	    spinnerOn();
    	    $.ajax({
    		    url: url,
    		    type: 'GET',
    		    cache: false,
    		    dataType: 'json'
    	    })
           .done(function (cancelInfo) {
       		   // $('#cancelClientFee').val(cancelInfo.ClientFee);
               $('#cancelClientFee').val('');
       		    $('#cancelClientFee').trigger('blur');
       		    //$('#cancelVendorFee').val(cancelInfo.VendorFee);
               $('#cancelVendorFee').val('');
       		    $('#cancelVendorFee').trigger('blur');
           })
           .fail(function (jqXHR, textStatus, errorThrown) {
       		    spinnerOff();
       		    handleException(jqXHR, textStatus, errorThrown);
           })
           .always(function () {
       		    spinnerOff();
           });
        }

        var ClearValueVendorManagementCancelModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            this.$element.find('#cancelClientFee').addClass("text-right");
            this.$element.find('#cancelClientFee').numericInput({ allowFloat: true });
            this.$element.find('#cancelClientFee').blur(function () { if ($('#cancelClientFee').val().length > 0) { $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); } });
            this.$element.find('#cancelVendorFee').addClass("text-right");
            this.$element.find('#cancelVendorFee').numericInput({ allowFloat: true });
            this.$element.find('#cancelVendorFee').blur(function () { if ($('#cancelVendorFee').val().length > 0) { $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); } });
            this.$element.find('#cancelFeeType').on('change', getCancellationFees);

            this.$element.on('show.bs.modal', function (e) {
                //below code is added by Priyanka Sharma  on 31-march-2020
                //Reason : Making all order cancellation as 'Manual Enter the Fee'. In order to implement this cancelFeeType dropdown is set to 'Manual Enter the fee'
                //         and hide it from UI
            	var modal = $(this).data('bs.modal');
                $('#cancelFeeType').val('3');
                $('#cancelFeeType').hide();
                $('#cancelClientFee').val('');
                $('#cancelVendorFee').val('');
                // Below code is commented by priyanka sharma on 31-march-2020 as there is no need to show cancelFeeType dropdown
                //$("#cancelClientFee").on("keyup", function () {
                //    if ($.isNumeric($("#cancelClientFee").val())) { }
                //});
            	//if (modal.getKeys().length > 1) {
            	//	$('#cancelFeeType').val('3');
            	//	$('#cancelFeeType').prop('disabled', true);
            	//	$('#cancelClientFee').val('0.00');
            	//	$('#cancelVendorFee').val('0.00');
            	//} else {
            		var orderID = modal.getKeys()[0].split('.')[0];
            		var orderItemID = modal.getKeys()[0].split('.')[1];

            	//	$('#cancelFeeType').val('2');
            	//	$('#cancelFeeType').prop('disabled', false);
            		$('#cancelOrderID').val(orderID);
            		$('#cancelOrderItemID').val(orderItemID);
            		getCancellationFees();
            	//}

               $(this).children('#CancelButton').prop('disabled', false);

            }).on('shown.bs.modal', function () {

            	$('#cancelFeeType').focus();

                });

        };

        ClearValueVendorManagementCancelModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueVendorManagementCancelModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        ClearValueVendorManagementCancelModal.prototype.show = function (keys) {
            this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueVendorManagementCancelModal.prototype.cancel = function () {

        	var cancelInfo = {
        		OrderKeys: this.getKeys(),
        		Reason: $("#cancelReason").val(),
        		FeeType: $("#cancelFeeType").val(),
        		ClientFee: $("#cancelClientFee").val(),
        		VendorFee: $("#cancelVendorFee").val()
        	};

        	var url = '/Orders/Items/UserActions/Cancel';
        	var wrapper = { cancelInfo: cancelInfo };

        	$('.cancel-modal-btn').prop('disabled', true);
        	spinnerOn();
        	$.ajax({
        		url: url,
        		type: 'POST',
        		cache: false,
        		data: JSON.stringify(wrapper),
        		contentType: "application/json",
        		dataType: 'json'
        	})
			.done(function (results) {
				showResultModal("Cancel Results", "[total] item(s) were canceled.", results);
				$('#cancelModal').modal('hide');
				$('#cancelModal').trigger('done.cvc.bs.modal');
			})
			.fail(function (jqXHR, textStatus, errorThrown) {
				spinnerOff();
				handleException(jqXHR, textStatus, errorThrown);
			})
			.always(function () {
				$('.cancel-modal-btn').prop('disabled', false);
				spinnerOff();
			});
        };

        var old = $.fn.clearvaluevendormanagementcancelmodal;

        $.fn.clearvaluevendormanagementcancelmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueVendorManagementCancelModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueVendorManagementCancelModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvaluevendormanagementcancelmodal.Constructor = ClearValueVendorManagementCancelModal;

        $.fn.clearvaluevendormanagementcancelmodal.noConflict = function () {
            $.fn.clearvaluevendormanagementcancelmodal = old;
            return this;
        };

    })(jQuery);

    // Below code is added on 26-march-2020, by priyanka sharma
    // In order to restrict user to enter client fee and vendor fee
    $('#CancelButton').click(function (e) {

        if ($("#cancelClientFee").val().length > 3 && $("#cancelVendorFee").val().length > 3) {

            var ConfirmClientAndVendorFee = confirm("You have entered Client Fee : " + $("#cancelClientFee").val() + " and Vendor Fee : " + $("#cancelVendorFee").val());
            if (ConfirmClientAndVendorFee) { $('#cancelModal').data('bs.modal').cancel() }
            else {

                e.preventDefault();
            }
        }
        else {
            alert("Kindly enter Client Fee and Vendor Fee");
            e.preventDefault();
        }

    });
    $(document).ready(function () {
        $('#cancelModal').clearvaluevendormanagementcancelmodal();

    });

	

					</script>


					<div id="checkoutModal" class="modal order-grid-modal" tabindex="-1" role="dialog"
						aria-labelledby="CheckOut" aria-hidden="true">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									Check Out Order Item(s)
								</div>
								<div class="modal-body">
									<form id="frmCheckoutSubmit" class="form-horizontal">
										<div class="row">
											<label class="control-label col-md-3" for="checkOutEmployee">Employee:</label>
											<div class="controls col-md-8">
												<select class="form-control" id="checkOutEmployee" name="checkOutEmployee" required="required"><option value="0Appraiser.Pandemic">0Appraiser Pandemic</option>
<option value="0Awaiting.FeeAp">0Awaiting FeeApproval</option>
<option value="0Awaiting.Insp">0Awaiting Inspection</option>
<option value="0Awaiting.Sales">0Awaiting SalesContract</option>
<option value="0Borrower.NotRe">0Borrower NotResponding</option>
<option value="0Borrower.Pandemic">0Borrower Pandemic</option>
<option value="0PandemicHoldGovt">0Pandemic Government</option>
<option value="0Pandemic.InteriorInspReq">0Pandemic InteriorInspReq</option>
<option value="0WaitingFor.Add">0WaitingFor AdditionalInformation</option>
<option value="1Sent to GAAR ">1Sent to GAAR</option>
<option value="2CMS Findings ">2CMS Findings</option>
<option value="3RFR Dispute">3RFR Dispute</option>
<option value="4Reviewer">4 Reviewer</option>
<option value="aansari">Aasif Ansari</option>
<option value="abywaters">Alan Bywaters</option>
<option value="agossett">Alex Gossett</option>
<option value="asams">Alexandra Sams</option>
<option value="agivvin">Alicia Givvin</option>
<option value="Altorder">Alt Order</option>
<option value="acooper">Amanda Cooper</option>
<option value="apancari">Amanda Pancari</option>
<option value="astryker">Amber Stryker</option>
<option value="aadamski">Ann Adamski</option>
<option value="ashrivastava">Archit Shrivastava</option>
<option value="arandall">Ashlee Randall</option>
<option value="bmalang">Bakary Malang</option>
<option value="bowen">Beth Owen</option>
<option value="bgade">Bharath Gade</option>
<option value="adminbp">Billy Pebley</option>
<option value="bpebley">Billy Pebley</option>
<option value="BFranco">Bob Franco</option>
<option value="bjames">Brad James</option>
<option value="brabe">Brad Rabe</option>
<option value="bdavis">Brandon Davis</option>
<option value="BMay">Brandy May</option>
<option value="bsandy">Brenda Sandy</option>
<option value="bdelarosa">Brian DeLaRosa</option>
<option value="bflavin">Brian Flavin</option>
<option value="brkelly">Brian Kelly</option>
<option value="bmiller">Brian Miller</option>
<option value="bblair">Brionna Blair</option>
<option value="cscanio1">Cameron Scanio</option>
<option value="csnow">Carrie Snow</option>
<option value="cspivey">Carrie Spivey</option>
<option value="crhodes">Casey Rhodes</option>
<option value="choulf">Chad Houlf</option>
<option value="ctwamsley">Charlene Thompson-Wamsley</option>
<option value="ckarel">Chris Karel</option>
<option value="cmcmahon1">Chris McMahon</option>
<option value="cdempsey">Christian Dempsey</option>
<option value="cmccartney">Christina McCartney</option>
<option value="cmclevey">Christina McLevey</option>
<option value="clang">Christopher Lang</option>
<option value="admincob">Cody Beacom</option>
<option value="CorrectionsCall">Corrections Callback</option>
<option value="cgearhart">Cory Gearhart</option>
<option value="cangst">Creighton Angst</option>
<option value="dflores">Daniel Flores</option>
<option value="dankeenan">Daniel Keenan</option>
<option value="dluzik">Daniel Luzik</option>
<option value="dnicoara">Daniel Nicoara</option>
<option value="dsoltis">Daniel Soltis</option>
<option value="dlewis">Danielle Lewis</option>
<option value="dmichak">Danielle Michak</option>
<option value="dabrown">David Brown</option>
<option value="dedmunds">David Edmunds</option>
<option value="dking">David King</option>
<option value="dmai">David Mai</option>
<option value="dowens">Dean Owens</option>
<option value="dvazzana">Dean Vazzana</option>
<option value="dbeattie">Debbie Beattie</option>
<option value="dlamb">Deborah Lamb</option>
<option value="devans">Delon Evans</option>
<option value="dhaase">Destiny Haase</option>
<option value="dgerhardt">Diane Gerhardt</option>
<option value="dlemashane">Diane Lemashane</option>
<option value="ddecherico">Dominick Decherico</option>
<option value="3RFR Pilot">Dual Report</option>
<option value="dsmucker">Duncan Smucker</option>
<option value="automationServiceUser">EA Team</option>
<option value="edhood">Ed Hood</option>
<option value="epacheco">Eli Pacheco</option>
<option value="ehatten">Ellen Hatten</option>
<option value="ehornbeck">Emily Hornbeck</option>
<option value="epenque">Emily Penque</option>
<option value="ecain">Eric Cain</option>
<option value="emoneymaker">Erika Moneymaker</option>
<option value="ebalaski">Erin Balaski</option>
<option value="echamberlain">Esther Chamberlain</option>
<option value="epark">Esther Park</option>
<option value="fgranadino">Felicia Granadino</option>
<option value="feformolo">Felicia West</option>
<option value="gsliwinski">Gabrielle Sliwinski</option>
<option value="gevans">Gemma Evans</option>
<option value="gdurban">Greg Durban</option>
<option value="gsteiger">Greg Steiger</option>
<option value="hcampbell">Hillary Campbell</option>
<option value="ikoul">Isha Koul</option>
<option value="ITTest">IT Test</option>
<option value="jgraham">Jack Graham</option>
<option value="jyoung">Jacob Young</option>
<option value="Jrosera">Jacqueline Rosera</option>
<option value="jfitzgerald">Jameson FitzGerald</option>
<option value="jsutphin">Janette Sutphin</option>
<option value="jgrohoski">Janice Grohoski</option>
<option value="jhilliard">Jared Hilliard</option>
<option value="jmichael">Jenna Michael</option>
<option value="jmadison">Jennifer Madison</option>
<option value="jmcallister">Jennifer McAlister</option>
<option value="jmcanulty">Jennifer McAnulty</option>
<option value="jpolizzano">Jennifer Polizzano</option>
<option value="jesavage">Jennifer Savage</option>
<option value="jstinemetz">Jeremy Stinemetz</option>
<option value="jcuffee">Jerramy Cuffee</option>
<option value="jjenkinstome">Jessica Jenkins-Tome</option>
<option value="jemccrarey">Jessica McCrarey</option>
<option value="JSnyder">Jessica Snyder</option>
<option value="jwilsonjerge">Jessie Wilson-Jerge</option>
<option value="jbeatty">Jim Beatty</option>
<option value="jfulcher">jim fulcher</option>
<option value="joayers">Jo-Vonia Ayers</option>
<option value="jdargo">John Dargo</option>
<option value="jvisintin">Joseph Visintin</option>
<option value="jleonardo2">Joshua Leonardo</option>
<option value="jbachner">Justin Bachner</option>
<option value="jgarner">Justin Garner</option>
<option value="kdanella">Karin Danella</option>
<option value="kdean">Kate Dean</option>
<option value="kgeorge">Ken George</option>
<option value="KHeller">Kim Heller</option>
<option value="kheuring">Kim Heuring</option>
<option value="kmako">Kimberly Mako</option>
<option value="kryan">Kimberly Ryan</option>
<option value="kbennett">Kimm Bennett</option>
<option value="kwilson">Krystal Wilson</option>
<option value="lrhwang">Lara Rintz Hwang</option>
<option value="lhagan">Laura Hagan</option>
<option value="ltrimbur">Lauren Trimbur</option>
<option value="llevitan">Laurie Levitan</option>
<option value="lsilver">Laurie Silver</option>
<option value="lphillipp">Leah Philipp</option>
<option value="ltolfa">Leo Tolfa</option>
<option value="lehernandez">Leonel Hernandez</option>
<option value="lsantiago">Leris Santiago</option>
<option value="lmartinez">Lesky Martinez</option>
<option value="lbrammer">Linda Brammer</option>
<option value="lreynolds">Lisa Reynolds</option>
<option value="lukekoson">Luke Koson</option>
<option value="majames">Malcolm James</option>
<option value="Mstoterau">Malorie Stoterau</option>
<option value="mhuston">Margaret Huston</option>
<option value="mdamico">Mary Damico</option>
<option value="mnicholl">Mary Nicholl</option>
<option value="mjsmrekar">Mary Jane Smrekar</option>
<option value="mkoch">Matt Koch</option>
<option value="mneighbors">Matt Neighbors</option>
<option value="mwebb">Matt Webb</option>
<option value="mreese">Matthew Reese</option>
<option value="mpeck">Megan Peck</option>
<option value="mkline">Meghann Kline</option>
<option value="MMartin">Melissa Martin</option>
<option value="mmorgan1">Melissa Morgan</option>
<option value="mmoats">Michael Moats</option>
<option value="mmacmillen">Michele MacMillen</option>
<option value="mblack">Michelle Black</option>
<option value="ntesnovich1">Natalie Tesnovich</option>
<option value="ngalliano">Nick Galliano</option>
<option value="osmirnova">Olga Smirnova</option>
<option value="opoore">Olivia Poore</option>
<option value="pabyrne">Patrick Byrne</option>
<option value="pfowler">Patrick Fowler</option>
<option value="phamilton">Patty Hamilton</option>
<option value="pcabral">Peggy Cabral</option>
<option value="prussell1">Peter Russell</option>
<option value="pketner">Preston Ketner</option>
<option value="pgonzalez">Priscilla Gonzalez</option>
<option value="psharma">Priyanka Sharma</option>
<option value="rgeorges">Renee Georges</option>
<option value="RFRCallback">RFR Callback</option>
<option value="rabdalla">Robert Abdalla</option>
<option value="rpachinger">Robert Pachinger</option>
<option value="rwagner">Robert Wagner</option>
<option value="rhaugen">Roberta Haugen</option>
<option value="robozick">Ronald Bozick</option>
<option value="rbearden">Roy Bearden</option>
<option value="smccabe">Samantha McCabe</option>
<option value="svendeland">Samuel Vendeland</option>
<option value="sakoelble">Sandra Koelble</option>
<option value="syost">Sandra Yost</option>
<option value="ssankey">Sandy Sankey</option>
<option value="sbigelow">Sarah Bigelow</option>
<option value="sfree">Scott Free</option>
<option value="swilliamson">Scott Williamson</option>
<option value="sponce">Sharon Ponce</option>
<option value="smurphy">Shawn Murphy</option>
<option value="slhenning">Sherry Landowski-Henning</option>
<option value="staylor">Shunai Taylor</option>
<option value="SLambu">Siva Lambu</option>
<option value="slambu_tls">Siva Lambu</option>
<option value="sdematteo">Stacy DeMatteo</option>
<option value="sgladden">Stephanie Gladden</option>
<option value="smazzanti">Stephen Mazzanti</option>
<option value="sbanks">Steve Banks</option>
<option value="sheckman">Steve Heckman</option>
<option value="skremer">Steve Kremer</option>
<option value="Stop Work ">Stop Work</option>
<option value="smcvay">Suzy McVay</option>
<option value="admin">System Administrator</option>
<option value="teberle">Tamara Eberle</option>
<option value="tkolodziej">Tami Kolodziej</option>
<option value="tbozick">Taylor Bozick</option>
<option value="tanzaldo">Ted Anzaldo</option>
<option value="tseefried">Terri Seefried</option>
<option value="Tzhou">Tianyu Zhou</option>
<option value="tfoley">Tim Foley</option>
<option value="toneil">Tim O&#39;Neil</option>
<option value="twagner">Tim Wagner</option>
<option value="tmcquillan">Timothy McQuillan</option>
<option value="tbritton">Tina Britton</option>
<option value="tmcnulty">Tina McNulty</option>
<option value="trichards">Tonia Richards</option>
<option value="toclark">Tonya Clark</option>
<option value="tohulstrom">Tory Hulstrom</option>
<option value="tmgreen">Tra&#39;Monica Green</option>
<option value="TAvila">Tracy Avila</option>
<option value="ehenry">Trey Henry</option>
<option value="tlaird">Troy Laird</option>
<option value="tgilmore">Tyler Gilmore</option>
<option value="twatts">Tyler Watts</option>
<option value="UnresAppraiser">Unresponsive Appraiser</option>
<option value="vmartinez">Valerie Hufner</option>
<option value="vramirez">Vanesa Ramirez</option>
<option value="vpaglia2">Vincent Paglia</option>
<option value="vwinter">Vincent Winter</option>
<option value="visionet">vision net</option>
<option value="VMGuidance">VM Guidance</option>
<option value="whareza">Wendy Hareza</option>
<option value="whouston">Wendy Houston</option>
<option value="WVincent">Winter Vincent</option>
<option value="yalvarez">Yolanda Alvarez</option>
<option value="zhardin">zach hardin</option>
<option value="zbalestrieri">Zachary Balestrieri</option>
<option value="zfrazier">Zack Frazier</option>
</select>
											</div>

										</div>
									</form>
								</div>
								<div class="modal-footer">
									<button id="btnCheckout" class="btn btn-default" onclick="$('#checkoutModal').data('bs.modal').save(); return false;">Check Out</button>
									<button class="btn btn-default" data-dismiss="modal">Cancel</button>
								</div>
							</div>
						</div>
					</div>

					<script type="text/javascript">
						// Maps to (partial) DAMEServices.OrderItemUpdate
	function CheckoutInfo(checkoutUser, canCheckOutForOthers) {
		this.CheckoutUser = checkoutUser;
		this.CanCheckOutForOthers = canCheckOutForOthers;
	};

	 // ClearValueCheckoutModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;

        var _checkoutInfo = new CheckoutInfo();

        var ClearValueCheckoutModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

        	this.$element.on('show.bs.modal', function () {
        		$('#checkOutEmployee').prop('disabled', false);
        		$('#btnCheckout').prop('disabled', false);

        		if (!_checkoutInfo.CanCheckOutForOthers)
        		{
        			$('#checkOutEmployee').val(_checkoutInfo.CheckoutUser);
        			$('#checkOutEmployee').prop('disabled', true);

        			if ($('#checkOutEmployee').val() == null)
        				$('#btnCheckout').prop('disabled', true);
        		}
        		else
        			$(this).find('#checkOutEmployee').val(_checkoutInfo.CheckoutUser);

            }).on('shown.bs.modal', function () {
            	$('#checkOutEmployee').focus();
            });
        };

        ClearValueCheckoutModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueCheckoutModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        ClearValueCheckoutModal.prototype.show = function (keys, checkoutUser, canCheckOutForOthers, currentUser) {
        	_checkoutInfo = new CheckoutInfo(checkoutUser, canCheckOutForOthers, currentUser);
            this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueCheckoutModal.prototype.save = function () {
        	var form = $('#frmCheckoutSubmit')[0];
        	var valid = form.checkValidity();

        	if (!valid)
        	{
        		form.reportValidity();
        		return;
        	}

            var checkoutModal = this;
            var $checkoutModalElement = this.$element;
            _checkoutInfo.checkoutUser = $('#checkOutEmployee').val();

            var orderKeys = this.getKeys();
            var url = '/Orders/Items/UserActions/CheckOut';
        	var wrapper = { orderKeys: orderKeys, username: _checkoutInfo.checkoutUser };

            spinnerOn();
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
            .done(function (results) {
                //hide before showing result modal to keep the default button correct
                checkoutModal.hide();
                showResultModal("Check Out Results", "[total] item(s) were checked out to " + _checkoutInfo.checkoutUser + ".", results);
                $checkoutModalElement.trigger('done.cvc.bs.modal');
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                spinnerOff();
                handleException(jqXHR, textStatus, errorThrown);
            })
            .always(function () {
                spinnerOff();
            });
        };

        var old = $.fn.clearvaluecheckoutmodal;

        $.fn.clearvaluecheckoutmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueCheckoutModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueCheckoutModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvaluecheckoutmodal.Constructor = ClearValueCheckoutModal;

        $.fn.clearvaluecheckoutmodal.noConflict = function () {
            $.fn.clearvaluecheckoutmodal = old;
            return this;
        };

    })(jQuery);

    $(document).ready(function () {
        $('#checkoutModal').clearvaluecheckoutmodal();
    });

					</script>

					<style>
						input.isDueDateChange {
							margin-top: 8px !important;
							margin-left: 15px !important;
						}

						#extendOrderItemDueDateModal .fee {
							text-align: right;
						}
					</style>

					<div id="extendOrderItemDueDateModal" class="modal" tabindex="-1" role="dialog" aria-labelledby=""
						aria-hidden="false">
						<div class="modal-dialog modal-lg">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									<span class='modal-title'>Change Due Date(s)</span>
								</div>
								<div class="modal-body">
									<form id="frmOrderItemDueDates" class="form-horizontal">
										<div class="form-group" id="validationGroup">
											<div class="col-md-offset-2 col-md-9" style="color: red;">
												<div class="validation-summary-errors">
													<ul></ul>
												</div>
											</div>
										</div>
										<div class="form-group">
											<div class="col-md-12">
												<p
													style="font-size: 15px; font-weight: bold; color: #FF0000; width: 89%; margin-left: auto; margin-right: auto; text-align: center">
													Before you change the client due date, make sure you have a firm
													commitment from the vendor and have
													appropriately adjusted the client due date per company and client
													guidelines.
												</p>
											</div>
										</div>
										<div class="form-group">
											<div class="col-md-12">
												<p style="font-size: 15px;">
													There are different reasons why the target dates on an outstanding
													order item might change. Please
													indicate the reason for the change, and the revised client and/or
													vendor due date.
												</p>
											</div>
										</div>
										<div class="form-group">
											<label class="control-label col-md-3" for="ClientDueDate_ReasonCode">Reason for Change:</label>
											<div class="controls col-md-7">
												<select class="form-control" id="ClientDueDate_ReasonCode" name="ClientDueDate.ReasonCode" onchange="if (this.setCustomValidity) this.setCustomValidity(&quot;&quot;);" oninvalid="if (this.setCustomValidity) this.setCustomValidity(&quot;The reason for change is required.&quot;);" required="required"><option value="">(Choose a Reason)</option>
<option value="BORROWER">Cancellation/Upgrade</option>
<option value="COMPLEX">Complex - Property Type</option>
<option value="CUST1">Complex - Rural Location</option>
<option value="CUST2">Credit for Cancelled Product</option>
<option value="CUST3">Customary and Resonable</option>
<option value="EXTTATMKT">Extended Turn Time Market</option>
<option value="HLDRSMEADJ">On Hold Resumed Adjustment</option>
<option value="LONGTATMKT">Distance</option>
<option value="ORGQTERQT">Original Quote Only Request</option>
<option value="PAYMENT">New Profile Fee</option>
<option value="POCDELAY">POC Delay</option>
<option value="REASSIGN">Re-Inspection/Additional QA Requests</option>
<option value="RURALMKT">Rush to Meet SLA</option>
<option value="RUSH">Sales Tax</option>
<option value="SCHEDULE">Trip Fee</option>
<option value="WEATHER">DNU - Weather delay</option>
<option value="X_1">Customer Requested Rush</option>
<option value="X_2">Quoted Turn Time - Alt Product</option>
<option value="X_3">Reassignment</option>
</select>
											</div>
										</div>

										<hr />
										<div class="container padding-top-ten" style="padding-left:0px;">
											<div class="col-md-6">
												<div class="form-group">
													<label for="IsChangeClientDueDate" class="control-label col-md-6 cvc-group-title" style="padding-top: 3px">Change Client Due Date</label>
													<input class="isDueDateChange" disabled="disabled" id="IsChangeClientDueDate" name="IsChangeClientDueDate" type="checkbox" value="true" /><input name="IsChangeClientDueDate" type="hidden" value="false" />
                            </div>
													<br />
													<br />
													<div class="form-group">
														<label class="control-label col-md-6 " for="ClientDueDate_ApprovalRequired">Request Client Approval:</label>
														<div class="controls col-md-1">
															<div class="checkbox"
																style="position: relative; top: -2px;">
																<input disabled="disabled" id="ClientDueDate_ApprovalRequired" name="ClientDueDate.ApprovalRequired" type="checkbox" value="true" /><input name="ClientDueDate.ApprovalRequired" type="hidden" value="false" />
		</div>
															</div>
														</div>

														<div class="form-group">
															<label class="control-label col-md-6" for="existingClientDueDate">Existing Due Date:</label>
															<label class="col-md-6" for="existingClientDueDate" id="existingClientDueDate" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">3/25/2022</label>
														</div>

														<div class='form-group'>
															<label class="control-label col-md-6" for="ClientDueDate_RevisedDueDate">Revised Due Date:</label>
															<div class='input-group date col-md-6'
																style='float: left !important; padding-left: 15px !important; padding-right: 15px !important;'
																id='ClientDueDate_RevisedDueDate_51d89f48-1847-43c0-a03d-e845d2d3f9cc'>
																<input class="form-control" disabled="disabled" id="ClientDueDate_RevisedDueDate" name="ClientDueDate.RevisedDueDate" oninvalid="if (this.setCustomValidity) this.setCustomValidity(&quot;The revised due date is required.&quot;);" required="required" type="text" value="1/1/0001 12:00:00 AM" />
																<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>
																</span> </div>
														</div>
														<script type='text/javascript'>
															$(document).ready(function() {
		$('#ClientDueDate_RevisedDueDate_51d89f48-1847-43c0-a03d-e845d2d3f9cc').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });
		$('#ClientDueDate_RevisedDueDate_51d89f48-1847-43c0-a03d-e845d2d3f9cc').on('dp.change', function() {
			var inputElement = $('#ClientDueDate_RevisedDueDate')[0];
			if (inputElement.setCustomValidity)
				inputElement.setCustomValidity('');
		});
		$('#ClientDueDate_RevisedDueDate').on('keyup', function() {
			if (this.setCustomValidity)
				this.setCustomValidity('');
		});
		$('#ClientDueDate_RevisedDueDate_51d89f48-1847-43c0-a03d-e845d2d3f9cc').data('DateTimePicker').date('1/1/0001 12:00:00 AM');
	});
														</script>

														<div class="form-group">
															<label class="control-label col-md-6 " for="EnableSetClientRushFee">Apply Rush Fee:</label>
															<div class="controls col-md-1">
																<div class="checkbox"
																	style="position: relative; top: -2px;">
																	<input disabled="disabled" id="EnableSetClientRushFee" name="EnableSetClientRushFee" type="checkbox" value="true" /><input name="EnableSetClientRushFee" type="hidden" value="false" />
		</div>
																</div>
															</div>

															<div class="form-group">
																<label class="control-label col-md-6" for="ClientDueDate_RushFee">Rush Fee Amount:</label>
																<div class="controls col-md-5">
																	<input class="fee form-control" disabled="disabled" id="ClientDueDate_RushFee" name="ClientDueDate.RushFee" type="text" value="" />
	</div>
																</div>

																<div class="form-group">
																	<label for="ClientDueDateComment" class="col-md-6 control-label left-justified">Comment:</label>
																	<div class="controls col-md-12">
																		<textarea class="form-control" cols="20" disabled="disabled" id="ClientDueDate_ReasonComment" maxlength="2000" name="ClientDueDate.ReasonComment" rows="4" style="resize: none;">
</textarea>
																	</div>

																</div>
															</div>

															<div class="col-md-6">
																<div class="col-md-12 zero-left-padding"
																	style="padding-bottom:6px;">
																	<div class="form-group">
																		<label for="IsChangeVendorDueDate" class="control-label cvc-group-title col-md-6" style="padding-top: 3px">Change Vendor Due Date</label>
																		<input class="isDueDateChange" disabled="disabled" id="IsChangeVendorDueDate" name="IsChangeVendorDueDate" type="checkbox" value="true" /><input name="IsChangeVendorDueDate" type="hidden" value="false" />
                                </div>
																	</div>
																	<br />
																	<br />
																	<br />
																	<br />
																	<div class="form-group">
																		<label class="control-label col-md-6" for="existingVendorDueDate">Existing Due Date:</label>
																		<label class="col-md-6" for="existingVendorDueDate" id="existingVendorDueDate" style="font-weight: normal; padding-top: 7px; margin-top: 0px; margin-bottom: 0px;">2/28/2022</label>
																	</div>

																	<div class='form-group'>
																		<label class="control-label col-md-6" for="VendorDueDate_RevisedDueDate">Revised Due Date:</label>
																		<div class='input-group date col-md-6'
																			style='float: left !important; padding-left: 15px !important; padding-right: 15px !important;'
																			id='VendorDueDate_RevisedDueDate_5073223b-da49-4d64-a79d-9be218ad680b'>
																			<input class="form-control" disabled="disabled" id="VendorDueDate_RevisedDueDate" name="VendorDueDate.RevisedDueDate" oninvalid="if (this.setCustomValidity) this.setCustomValidity(&quot;The revised due date is required.&quot;);" required="required" type="text" value="1/1/0001 12:00:00 AM" />
																			<span class='input-group-addon'>			<span class='glyphicon glyphicon-calendar'></span>
																			</span> </div>
																	</div>
																	<script type='text/javascript'>
																		$(document).ready(function() {
		$('#VendorDueDate_RevisedDueDate_5073223b-da49-4d64-a79d-9be218ad680b').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate, widgetPositioning: { vertical: 'auto' } });
		$('#VendorDueDate_RevisedDueDate_5073223b-da49-4d64-a79d-9be218ad680b').on('dp.change', function() {
			var inputElement = $('#VendorDueDate_RevisedDueDate')[0];
			if (inputElement.setCustomValidity)
				inputElement.setCustomValidity('');
		});
		$('#VendorDueDate_RevisedDueDate').on('keyup', function() {
			if (this.setCustomValidity)
				this.setCustomValidity('');
		});
		$('#VendorDueDate_RevisedDueDate_5073223b-da49-4d64-a79d-9be218ad680b').data('DateTimePicker').date('1/1/0001 12:00:00 AM');
	});
																	</script>

																	<div class="form-group">
																		<label class="control-label col-md-6 " for="EnableSetVendorRushFee">Apply Rush Fee:</label>
																		<div class="controls col-md-1">
																			<div class="checkbox"
																				style="position: relative; top: -2px;">
																				<input disabled="disabled" id="EnableSetVendorRushFee" name="EnableSetVendorRushFee" type="checkbox" value="true" /><input name="EnableSetVendorRushFee" type="hidden" value="false" />
		</div>
																			</div>
																		</div>

																		<div class="form-group">
																			<label class="control-label col-md-6" for="VendorDueDate_RushFee">Rush Fee Amount:</label>
																			<div class="controls col-md-5">
																				<input class="fee form-control" disabled="disabled" id="VendorDueDate_RushFee" name="VendorDueDate.RushFee" type="text" value="" />
	</div>
																			</div>

																			<div class="form-group">
																				<label for="VendorDueDateComment" class="col-md-6 control-label left-justified">Comment:</label>
																				<div class="controls col-md-12">
																					<textarea class="form-control" cols="20" disabled="disabled" id="VendorDueDate_ReasonComment" maxlength="2000" name="VendorDueDate.ReasonComment" rows="4" style="resize: none;">
</textarea>
																				</div>

																			</div>
																		</div>
																	</div>
									</form>
								</div>
								<div class="modal-footer">
									<button class="btn btn-default" onclick="$('#extendOrderItemDueDateModal').data('bs.modal').save();">OK</button>
									<button class="btn btn-default" onclick="return false;" data-dismiss="modal">Cancel</button>
								</div>
							</div>
						</div>
					</div>

					<script>
						// ClearValueExtendOrderItemDueDateModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        var _clientDueDate;
        var _vendorDueDate;

        $('#ClientDueDate_ReasonCode').on('change', function () {
            var enabled = $(this).val() === '' ? false : true;

            $('#IsChangeClientDueDate').prop('disabled', !enabled);
            $('#IsChangeVendorDueDate').prop('disabled', !enabled);
            if (!enabled) {
                $('#IsChangeClientDueDate').prop('checked', false);
                $('#IsChangeClientDueDate').trigger('change');
                $('#IsChangeVendorDueDate').prop('checked', false);
                $('#IsChangeVendorDueDate').trigger('change');
            }
        });

        $('#IsChangeClientDueDate').on('change', function () {
            var enabled = $(this).is(':checked');

            $('#ClientDueDate_ApprovalRequired').prop('disabled', !enabled);
            $('#ClientDueDate_RevisedDueDate').prop('disabled', !enabled);
            $('#ClientDueDate_RevisedDueDate').trigger('dp.change');
            $('#ClientDueDate_ReasonComment').prop('disabled', !enabled);
        });

        $('#ClientDueDate_RevisedDueDate').closest('div.date').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate }).on('dp.change', function (ev) {
            var currentDateText = $('#existingClientDueDate').text();
            var currentDate = Date.parse(currentDateText);
            var newDateText = $('#ClientDueDate_RevisedDueDate').val();
            var newDate = Date.parse(newDateText);
            var enabled = newDate < currentDate && !$('#ClientDueDate_RevisedDueDate').prop('disabled');

            if (enabled) {
                $('#EnableSetClientRushFee').prop('disabled', false);
            }
            else {
                $('#EnableSetClientRushFee').prop('disabled', true);
                $('#EnableSetClientRushFee').prop('checked', false);
                $('#EnableSetClientRushFee').trigger('change');
                $('#ClientDueDate_RushFee').prop('disabled', true);
                $('#ClientDueDate_RushFee').val('');
            }
        });

        $('#EnableSetClientRushFee').on('change', function () {
            var enabled = $(this).prop('checked');
            if (enabled) {
                $('#ClientDueDate_RushFee').prop('disabled', false);
            }
            else {
                $('#ClientDueDate_RushFee').prop('disabled', true);
                $('#ClientDueDate_RushFee').val('');
            }
        })

        $('#IsChangeVendorDueDate').on('change', function () {
            var enabled = $(this).prop('checked');

            $('#VendorDueDate_RevisedDueDate').prop('disabled', !enabled);
            $('#VendorDueDate_RevisedDueDate').trigger('dp.change');
            $('#VendorDueDate_ReasonComment').prop('disabled', !enabled);
        });

        $('#VendorDueDate_RevisedDueDate').closest('div.date').datetimepicker({ format: 'MM/DD/YYYY', parseInputDate: parseInputDate }).on('dp.change', function (ev) {
            var currentDateText = $('#existingVendorDueDate').text();
            var currentDate = Date.parse(currentDateText);
            var newDateText = $('#VendorDueDate_RevisedDueDate').val();
            var newDate = Date.parse(newDateText);
            var enabled = newDate < currentDate && !$('#VendorDueDate_RevisedDueDate').prop('disabled');

            if (enabled) {
                $('#EnableSetVendorRushFee').prop('disabled', false);
            }
            else {
                $('#EnableSetVendorRushFee').prop('disabled', true);
                $('#EnableSetVendorRushFee').trigger('change');
                $('#VendorDueDate_RushFee').prop('disabled', true);
                $('#VendorDueDate_RushFee').val('');
            }
        });

        $('#EnableSetVendorRushFee').on('change', function () {
            var enabled = $(this).prop('checked');
            if (enabled) {
                $('#VendorDueDate_RushFee').prop('disabled', false);
            }
            else {
                $('#VendorDueDate_RushFee').prop('disabled', true);
                $('#VendorDueDate_RushFee').val('');
            }
        })

        var ClearValueExtendOrderItemDueDateModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            this.$element.on('show.bs.modal', function () {
                $.ajax({
                    async: false,
                    url: '/Orders/4865952/Items/1/ClientVendorDueDates',
                    type: 'GET',
                    cache: false,
                    contentType: "application/json",
                    dataType: 'json'
                })
                    .done(function (dates) {
                        _clientDueDate = dates.ClientDueDate;
                        _vendorDueDate = dates.VendorDueDate;
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        handleException(jqXHR, textStatus, errorThrown);
                    });
                $(this).find("#ClientDueDate_ReasonCode").val('');

                $(this).find('#ClientDueDate_RushFee').numericInput({ allowFloat: true, allowNegative: true, max: 99999 });
                $('#ClientDueDate_RushFee').blur(function () { $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); }).blur();

                $(this).find('#VendorDueDate_RushFee').numericInput({ allowFloat: true, allowNegative: true, max: 99999 });
                $(this).find('#VendorDueDate_RushFee').blur(function () { $(this).val(accounting.formatMoney($(this).val(), "", 2, ",", ".", "%s%v")); }).blur();

                $(this).find("#IsChangeClientDueDate").prop('checked', false);
                $(this).find("#IsChangeClientDueDate").prop('disabled', true);
                $(this).find("#ClientDueDate_ApprovalRequired").prop('checked', false);
                $(this).find("#ClientDueDate_ApprovalRequired").prop('disabled', true);
                $(this).find("#ClientDueDate_RevisedDueDate").prop('disabled', true);
                $(this).find("#ClientDueDate_RevisedDueDate").val(_clientDueDate);
                $(this).find("#existingClientDueDate").text(_clientDueDate);
                $(this).find("#EnableSetClientRushFee").prop('checked', false);
                $(this).find("#EnableSetClientRushFee").prop('disabled', true);
                $(this).find("#ClientDueDate_RushFee").val('').blur();
                $(this).find("#ClientDueDate_RushFee").prop('disabled', true);
                $(this).find("#ClientDueDate_ReasonComment").val('');
                $(this).find("#ClientDueDate_ReasonComment").prop('disabled', true);

                $(this).find("#IsChangeVendorDueDate").prop('checked', false);
                $(this).find("#IsChangeVendorDueDate").prop('disabled', true);
                $(this).find("#existingVendorDueDate").text(_vendorDueDate);
                $(this).find("#VendorDueDate_ApprovalRequired").prop('checked', false);
                $(this).find("#VendorDueDate_ApprovalRequired").prop('disabled', true);
                
                $(this).find("#VendorDueDate_RevisedDueDate").val(_vendorDueDate);
                $(this).find("#VendorDueDate_RevisedDueDate").prop('disabled', true);
                $(this).find("#EnableSetVendorRushFee").prop('checked', false);
                $(this).find("#EnableSetVendorRushFee").prop('disabled', true);
                $(this).find("#VendorDueDate_RushFee").val('').blur();
                $(this).find("#VendorDueDate_RushFee").prop('disabled', true);
                $(this).find("#VendorDueDate_ReasonComment").val('');
                $(this).find("#VendorDueDate_ReasonComment").prop('disabled', true);

                $(this).find(".validation-summary-errors ul li").remove();

            }).on('shown.bs.modal', function () {
                $(this).find('#ClientDueDate_ReasonCode').focus();
            });
        };

        ClearValueExtendOrderItemDueDateModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueExtendOrderItemDueDateModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
				method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        ClearValueExtendOrderItemDueDateModal.prototype.show = function () {
            this.clearvaluemodalparent('show');            
        };

        ClearValueExtendOrderItemDueDateModal.prototype.save = function () {

            var extendOrderItemDueDateModal = this;
            var $extendOrderItemDueDateModalElement = this.$element;
            var isValid = $('#frmOrderItemDueDates')[0].checkValidity();

            if (isValid) {

                $extendOrderItemDueDateModalElement.find('button').prop('disabled', true);
                var wrapper = [];
                var clientChecked = $extendOrderItemDueDateModalElement.find("#IsChangeClientDueDate").prop('checked');
                var vendorChecked = $extendOrderItemDueDateModalElement.find("#IsChangeVendorDueDate").prop('checked');
                var reasonCode = $extendOrderItemDueDateModalElement.find('#ClientDueDate_ReasonCode option:selected').text();

                if (clientChecked) {
                    var clientRushFee = $extendOrderItemDueDateModalElement.find('#EnableSetClientRushFee').prop('checked') ? $extendOrderItemDueDateModalElement.find('#ClientDueDate_RushFee').val() : '';
                    var extendedDueDateViewClient = {
                        DueDateType: 'CLIENT',
                        RevisedDueDate: $extendOrderItemDueDateModalElement.find('#ClientDueDate_RevisedDueDate').val(),
                        ReasonCode: reasonCode,
                        ReasonComment: $extendOrderItemDueDateModalElement.find('#ClientDueDate_ReasonComment').val(),
                        ApprovalRequired: $extendOrderItemDueDateModalElement.find('#ClientDueDate_ApprovalRequired').prop('checked'),
                        RushFee: clientRushFee
                    };
                    wrapper.push(extendedDueDateViewClient);
                }

                if (vendorChecked) {
                    var vendorRushFee = $extendOrderItemDueDateModalElement.find('#EnableSetVendorRushFee').prop('checked') ? $extendOrderItemDueDateModalElement.find('#VendorDueDate_RushFee').val() : '';
                    var extendedDueDateViewVendor = {
                        DueDateType: 'VENDOR',
                        RevisedDueDate: $extendOrderItemDueDateModalElement.find('#VendorDueDate_RevisedDueDate').val(),
                        ReasonCode: reasonCode,
                        ReasonComment: $extendOrderItemDueDateModalElement.find('#VendorDueDate_ReasonComment').val(),
                        RushFee: vendorRushFee
                    };
                    wrapper.push(extendedDueDateViewVendor);
                }

                spinnerOn();
                $.ajax({
                    url: '/Orders/4865952/Items/1/UserActions/ExtendDueDate',
                    type: 'POST',
                    cache: false,
                    data: JSON.stringify(wrapper),
                    contentType: "application/json",
                    dataType: 'json'
                })
                .done(function (results) {
                    showResultModal("Change Due Date Results", '', [results]);
                    extendOrderItemDueDateModal.hide();
                    $extendOrderItemDueDateModalElement.trigger('done.cvc.bs.modal');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    spinnerOff();
                    handleException(jqXHR, textStatus, errorThrown);
                })
                .always(function () {
                    $extendOrderItemDueDateModalElement.find('button').prop('disabled', false);
                    spinnerOff();
                });
            }
            else {
                $('#frmOrderItemDueDates')[0].reportValidity();
            }
            
        };

        var old = $.fn.clearvalueextendorderitemduedatemodal;

        $.fn.clearvalueextendorderitemduedatemodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
				data = $this.data('bs.modal'),
				options = $.extend({}, ClearValueExtendOrderItemDueDateModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueExtendOrderItemDueDateModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvalueextendorderitemduedatemodal.Constructor = ClearValueExtendOrderItemDueDateModal;

        $.fn.clearvalueextendorderitemduedatemodal.noConflict = function () {
            $.fn.clearvalueextendorderitemduedatemodal = old;
            return this;
        };
    })(jQuery);

    $(document).ready(function () {
        $('#extendOrderItemDueDateModal').clearvalueextendorderitemduedatemodal();        
    })
					</script>


					<!-- Route Modal -->
					<div id="routeModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Route"
						aria-hidden="true">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									Manually Route Order Item
								</div>
								<div class="modal-body">
									<form id="frmRouteSubmit" class="form-horizontal">
										<div class="row">
											<label class="control-label col-md-3" for="Queue">New Queue:</label>
											<div class="controls col-md-7">
												<select class="form-control" id="Queue" name="Queue" required="required"><option value="410">Alt Product - Awaiting Corrections Review</option>
<option value="400">Alt Product - Awaiting Review</option>
<option value="70">Awaiting Appointment Schedule</option>
<option value="55">Awaiting Automated Assignment</option>
<option value="250">Awaiting Client Designation</option>
<option value="240">Awaiting Client Review</option>
<option value="150">Awaiting Correction Review</option>
<option value="140">Awaiting Corrections</option>
<option value="330">Awaiting CS FeeReview</option>
<option value="160">Awaiting Delivery</option>
<option value="15">Awaiting Fee Review</option>
<option value="80">Awaiting Inspection</option>
<option value="100">Awaiting Managerial Assistance</option>
<option value="60">Awaiting Manual Assignment</option>
<option value="10">Awaiting Order Confirmation</option>
<option value="40">Awaiting Prepayment</option>
<option value="120">Awaiting Quality Assurance</option>
<option value="90">Awaiting Report from Vendor</option>
<option value="130">Awaiting Supervisory Review</option>
<option value="65">Awaiting Vendor Acceptance</option>
<option value="50">Awaiting Vendor Fee/Time Adjustment</option>
<option value="30">Awaiting Vendor Quote</option>
<option value="20">Awaiting Vendor Recruitment</option>
<option value="450">Chase Revision Request Hold</option>
<option value="300">Client Quality Control Completed</option>
<option value="67">Conditional Vendor Acceptance Review</option>
<option value="430">CS Quote Review</option>
<option value="350">CS Redelivery</option>
<option value="370">Desktop Certification Assignment Pending</option>
<option value="380">Desktop Certification Review</option>
<option value="440">ECR Pull Ahead</option>
<option value="290">FNC RFR Returned</option>
<option value="420">GAAR Rules Failed</option>
<option value="310">Managerial RFR Escalation</option>
<option value="210">Manual ACR</option>
<option value="200">Manual AQA</option>
<option value="315">Manual Upgrade Needed</option>
<option value="110">On Hold</option>
<option value="320">Payment Method Change</option>
<option value="52">Pending Cancellations and Upgrades</option>
<option value="180">Pending Client Disputes/Corrections</option>
<option value="270">Pending Delegations</option>
<option value="360">Pending Post Delivery Revisions/Appeal</option>
<option value="390">Private Wealth</option>
<option value="0">Processing Completed</option>
<option value="260">QC Assistance</option>
<option value="230">RFR Correction Review Needed</option>
<option value="220">RFR Corrections Pending</option>
<option value="190">Third-Party Quality Control Findings</option>
<option value="340">TMS New Order Fee Verification</option>
<option value="170">UCDP/EAD Review Required</option>
</select>
											</div>

										</div>
									</form>
								</div>
								<div class="modal-footer">
									<button id="RouteButton" class="btn btn-default" onclick="$('#routeModal').data('bs.modal').save(); return false;">Route Item To New Queue</button>
									<button class="btn btn-default" data-dismiss="modal">Cancel</button>
								</div>
							</div>
						</div>
					</div>
					<!-- /Route Modal -->

					<script type="text/javascript">
						// Maps to (partial) DAMEServices.OrderItemUpdate
	function RouteInfo(queueID) {
		this.QueueID = queueID;
		this.ManuallyRouted = true;
	};

	 // ClearValueRouteModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;

        var _routeInfo = new RouteInfo();

        var ClearValueRouteModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            this.$element.on('show.bs.modal', function () {
            	$(this).find('#Queue').val(_routeInfo.QueueID);

            }).on('shown.bs.modal', function () {

            });           
        };

        ClearValueRouteModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueRouteModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        ClearValueRouteModal.prototype.show = function (keys, queueID) {
        	_routeInfo = new RouteInfo(queueID);
            this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueRouteModal.prototype.save = function () {
        	var form = $('#frmRouteSubmit')[0];
        	var valid = form.checkValidity();

        	if (!valid)
        	{
        		form.reportValidity();
        		return;
        	}

            var routeModal = this;
            var $routeModalElement = this.$element;
            _routeInfo.QueueID = $('#Queue').val();
            var orderKeys = this.getKeys();
            var url = _baseUrl + 'Orders/Items/UserActions/Route';
            var wrapper = { orderKeys: orderKeys, queueID: _routeInfo.QueueID, manuallyRouted: _routeInfo.ManuallyRouted };
            spinnerOn();
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
            .done(function (results) {
                //hide before showing result modal to keep the default button correct
                routeModal.hide();
                showResultModal("Route Results", "[total] item(s) were routed.", results);
                $routeModalElement.trigger('done.cvc.bs.modal');
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                spinnerOff();
                handleException(jqXHR, textStatus, errorThrown);
            })
            .always(function () {
                spinnerOff();
            });
        };

        var old = $.fn.clearvalueroutemodal;

        $.fn.clearvalueroutemodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueRouteModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueRouteModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvalueroutemodal.Constructor = ClearValueRouteModal;

        $.fn.clearvalueroutemodal.noConflict = function () {
            $.fn.clearvalueroutemodal = old;
            return this;
        };

    })(jQuery);

					</script>




					<div id="holdModal" class="modal order-grid-modal" tabindex="-1" role="dialog"
						aria-labelledby="Hold Status" aria-hidden="true">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									<span id="holdModalTitle">Hold Order Item(s)</span>
								</div>
								<div class="modal-body">
									<form id="frmHoldSubmit" class="form-horizontal">
										<input id="holdAction" name="holdAction" type="hidden" value="on" />
										<div class="row">
											<label class="control-label col-md-3" for="holdComment">Comment:</label>
											<div class="controls col-md-9">
												<textarea class="form-control" cols="20" id="holdComment" maxlength="2000" name="holdComment" required="required" rows="4" style="resize: none;">
</textarea>
											</div>

										</div>
										<div id="holdReasonSection" class="row mt-3">
											<label class="control-label col-md-3" for="holdReason">Reason:</label>
											<div class="controls col-md-9">
												<select class="form-control" id="holdReason" name="holdReason" required="required"><option selected="selected" value="ACCESS-CONTACT-INVALID">Access Contact is Invalid</option>
<option value="ACCESS-CONTACT-UNKNOWN">Access Contact is Unknown</option>
<option value="ADDITIONAL-CLIENT-FEE-REQUESTED">Additional Client Fee Requested</option>
<option value="ADDITIONAL-INFORMATION-REQUIRED">Additional Information Required</option>
<option value="ADDITIONAL-PAYMENT-REQUIRED">Additional Payment Required</option>
<option value="APPRIASER-CANNOT-INSPECT-PANDEMIC">Appraiser Cannot Inspect - Current Pandemic</option>
<option value="AWAITING-CO-OP-QUESTIONNAIRE">Awaiting co-op questionnaire</option>
<option value="AWAITING-CONDO-QUESTIONNAIRE">Awaiting Condo Questionnaire</option>
<option value="AWAITING-PAYMENT">Awaiting Payment</option>
<option value="AWAITING-SALES-CONTRACT">Awaiting Sales Contract</option>
<option value="AWAITING-SECOND-APPRAISAL">Awaiting Second Appraisal</option>
<option value="BORROWER-DELAYED-INSPECTION">Borrower Delayed Inspection</option>
<option value="BORROWER-NOT-RESPONDING">Borrower not responding</option>
<option value="BORROWER-UNWILLING-TO-INSPECT">Borrower not willing to schedule inspection</option>
<option value="BORROWER-REQUESTED-CANCELLATION">Borrower requested to cancel the loan</option>
<option value="BORROWER-UNWILLING-TO-SCHEDULE-PANDEMIC">Borrower Unwilling to Schedule - Current Pandemic</option>
<option value="BORROWER-SPEAKING-TO-CLIENT">Borrower would like to speak to client</option>
<option value="CANNOT-REACH-PROPERTY-ACCESS-CONTACT">Cannot Reach Property Access Contact</option>
<option value="CHASE-HOTLINE">Chase Hotline Appraisal Guidance</option>
<option value="REQUEST-ORIGINAL-APPRAISAL">Chase Hotline Vendor Reassignment</option>
<option value="CLIENT-DUE-DATE-APPROVAL-REQUIRED">Client Due Date Approval Required</option>
<option value="CREDIT-CARD-PROCESSING-EXCEPTION">Credit Card Processing Exception</option>
<option value="CUSTOMER-CANCELLED-APPOINTMENT">Customer Cancelled Appointment</option>
<option value="CUSTOMER-MISSED-SCHEDULED-APPOINTMENT">Customer Missed Scheduled Appointment</option>
<option value="CUSTOMER-RESCHEDULED-APPOINTMENT">Customer Rescheduled Appointment</option>
<option value="CUSTOMER-UNWILLING-TO-PAY">Customer Unwilling To Pay</option>
<option value="DELAYED-BY-BORROWER">Delayed by Borrower</option>
<option value="DELAYED-BY-LENDER">Delayed By Lender</option>
<option value="DELAYED-BY-REALTOR">Delayed by Realtor</option>
<option value="DISTANCE-APPROVAL">Distance Approval Requested</option>
<option value="DUPLICATE-ORDER">Duplicate Order</option>
<option value="FEE-APPROVAL">Fee Approval Requested</option>
<option value="INCORRECT-CONTACT-NUMBERS">Incorrect contact numbers provided for borrower</option>
<option value="LENDER/CLIENT-CANCELLED-THE-ORDER">Lender/client cancelled the order</option>
<option value="NO-PROPERTY-ACCESS">No Property Access</option>
<option value="OCCUPANT-RESISTS-INSPECTION">Occupant Resists Inspection</option>
<option value="OTHER">Other</option>
<option value="Pandemic-Hold-Government">Pandemic Hold Government</option>
<option value="PANDEMIC-HOLD-INTERIOR-INSP-REQUIRED">Pandemic Hold Interior Inspection Required</option>
<option value="PENDING-CANCELLATION-HOLD">Pending Cancellation Hold</option>
<option value="PROPERTY-ADDRESS-INVALID">Property Address Invalid</option>
<option value="PROPERTY-VACANT">Property is Vacant</option>
<option value="PROPERTY-NOT-COMPLETE">Property Not Complete</option>
<option value="REPAIRS-INCOMPLETE">Repairs are incomplete</option>
<option value="REPAIRS-NOT-COMPLETE">Repairs Not Complete</option>
<option value="RURAL-PROPERTY">Subject Property Is In Remote Area</option>
<option value="SYSTEM-DUPLICATE">System Duplicate</option>
<option value="UNKNOWN-REASON">Unknown Reason</option>
<option value="UPGRADE-RECOMMENDED">Upgrade Recommended</option>
<option value="VENDOR-UNABLE-TO-COMPLETE-REPORT">Vendor Unable To Complete Report</option>
<option value="WAITING-FOR-INSPECTION">Waiting for scheduled inspection</option>
<option value="AWAITING-INSPECTION-BORROWER-DELAY">Waiting For Scheduled Inspection – Borrower Delay</option>
<option value="WEATHER-DELAY">Weather Delay</option>
<option value="CANNOT-LOCATE-PROPERTY">Wrong Property address/cannot locate property</option>
<option value="ZONING-ISSUE">Zoning Issue</option>
</select>
											</div>

										</div>
									</form>
								</div>
								<div class="modal-footer">
									<button id="btnProcessHold" class="btn btn-default" OnClick="$('#holdModal').data('bs.modal').save(); return false;">Place Order On Hold</button>
									<button class="btn btn-default" data-dismiss="modal">Cancel</button>
								</div>
							</div>
						</div>
					</div>

					<script type="text/javascript">
						// ClearValueOrderHoldModal : ClearValueModal
    function HoldInfo(holdAction) {
        this.HoldAction = (holdAction === undefined ? false : holdAction);
        this.HoldReasonID = '';
        this.HoldComment = '';
    };

    $("#holdReason").on("change", function () {

    });

    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        var _holdInfo = new HoldInfo();

        function setup(holdAction) {
            if (holdAction) {
                $('#holdAction').val("1");
                $('#holdReasonSection').show();
                $('#btnProcessHold').text('Place Order On Hold');
                $('span#holdModalTitle').text('Place Order Item(s) on Hold');
                $("#holdComment").val("");
            }
            else {
                $('#holdAction').val("0");
                $('#holdReasonSection').hide();
                $('#btnProcessHold').text('Release Hold');
                $('span#holdModalTitle').text('Take Order Item(s) off Hold');
                $('#holdComment').val('Order has been resumed from hold.');
            }
        }

        var ClearValueOrderHoldModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            $('label[for=holdComment]').css("margin-top", "28px");

            this.$element.on('show.bs.modal', function () {
                var keys = $(this).data("bs.modal").getKeys();
                setup(_holdInfo.HoldAction);
                //$(this).find('#holdComment').val('');

            }).on('shown.bs.modal', function () {
                $(this).find('#holdComment').focus();
            });
        };

        $('#holdComment').on('change', function () {
            $(this).val($(this).val().replaceAll('<', ' ['));
            $(this).val($(this).val().replaceAll('>', '] '));
        });

        ClearValueOrderHoldModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueOrderHoldModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        // NOT supporting relatedTarget - too many values to initialize and support show without adding methods - hence modal toggle not available
        ClearValueOrderHoldModal.prototype.show = function (keys, holdAction) {
            _holdInfo = new HoldInfo(holdAction);
            this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueOrderHoldModal.prototype.save = function () {
            var holdModal = this;
            var holdModalElement = this.$element;
            var orderKeys = this.getKeys();

            var action = $('#holdAction').val();
            if (action == "1")
                holdOrders(holdModal, holdModalElement, orderKeys);
            else
                releaseOrders(holdModal, holdModalElement, orderKeys);
        };

        var old = $.fn.clearvalueorderholdmodal;

        $.fn.clearvalueorderholdmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                    data = $this.data('bs.modal'),
                    options = $.extend({}, ClearValueOrderHoldModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueOrderHoldModal(this, options)));
                }
                if (typeof option === 'string')
                    data[option](_relatedTarget);
                else if (options.show)
                    data.show(_relatedTarget);
            });
        };

        $.fn.clearvalueorderholdmodal.Constructor = ClearValueOrderHoldModal;

        $.fn.clearvalueorderholdmodal.noConflict = function () {
            $.fn.clearvalueorderholdmodal = old;
            return this;
        };

        // TODO - Discuss with business: Do we want extra logic around this multi-order Put On Hold functionality?
        //        We'd have to ensure each order is on the same client and then filter the hold reasons in the modal per client.
        function holdOrders(holdModal, holdModalElement, orderKeys) {
            holdModalElement.find('#btnProcessHold').prop('disabled', true);

            var form = holdModalElement.find('#frmHoldSubmit')[0];
            holdModalElement.find('#holdReason').blur();
            var valid = form.checkValidity();
            holdModalElement.find('#btnProcessHold').prop('disabled', false);

            if (!valid) {
                form.reportValidity();
                return;
            }

            _holdInfo.HoldReasonID = holdModalElement.find('#holdReason').val();
            _holdInfo.HoldComment = holdModalElement.find('#holdComment').val();

            var url = _baseUrl + 'Orders/Items/UserActions/Hold';
            var wrapper = { orderKeys: orderKeys, holdReasonID: _holdInfo.HoldReasonID, holdComment: _holdInfo.HoldComment };
            spinnerOn();
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
                .done(function (results) {
                    //hide before showing result modal to keep the default button correct
                    holdModal.hide();
                    showResultModal("Place On Hold Results", "[total] item(s) were placed on hold.", results);
                    holdModalElement.trigger('done.cvc.bs.modal');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    spinnerOff();
                    handleException(jqXHR, textStatus, errorThrown);
                })
                .always(function () {
                    spinnerOff();
                });
        }

        function releaseOrders(holdModal, holdModalElement, orderKeys) {
            var url = _baseUrl + 'Orders/Items/UserActions/Release';
            var wrapper = { orderKeys: orderKeys, holdComment: holdModalElement.find('#holdComment').val() };
            spinnerOn();
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
                .done(function (results) {
                    //hide before showing result modal to keep the default button correct
                    holdModal.hide();
                    showResultModal("Take Off Hold", "[total] item(s) were taken off hold.", results);
                    holdModalElement.trigger('done.cvc.bs.modal');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    spinnerOff();
                    handleException(jqXHR, textStatus, errorThrown);
                })
                .always(function () {
                    spinnerOff();
                });
        }
    })(jQuery);

    $(document).ready(function () {
        $('#holdModal').clearvalueorderholdmodal();
    });

					</script>



					<div id="DoNotRelease" class="modal order-grid-modal" tabindex="-1" role="dialog"
						aria-labelledby="Do Not Release Status" aria-hidden="true">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									<span id="DoNotReleaseModalTitle">Do Not Release</span>
								</div>
								<div class="modal-body">
									<form id="frmDoNotreleaseSubmit" class="form-horizontal">
										<input id="DoNotReleaseAction" name="DoNotReleaseAction" type="hidden" value="on" />
										<div class="row">
											<label class="control-label col-md-3" for="DoNotReleaseComment">Comment:</label>
											<div class="controls col-md-9">
												<textarea class="form-control" cols="20" id="DoNotReleaseComment" maxlength="2000" name="DoNotReleaseComment" rows="4" style="resize: none;">
</textarea>
											</div>

										</div>
									</form>
								</div>
								<div class="modal-footer">
									<button id="btnProcessDoNotRelease" class="btn btn-default" OnClick="$('#DoNotRelease').data('bs.modal').save(); return false;">OK</button>
									<button class="btn btn-default" data-dismiss="modal">Cancel</button>
								</div>
							</div>
						</div>
					</div>
					<script type="text/javascript">
						function _DoNotReleaseInfo(DoNotReleaseAction) {
        this.doNotReleaseAction = (DoNotReleaseAction === undefined ? false : DoNotReleaseAction);
        this.doNotReleaseComment = '';
    };
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        var _doNotReleaseInfo = new _DoNotReleaseInfo();

        function setup(doNotReleaseAction) {
            if (doNotReleaseAction) {
                $('#DoNotReleaseAction').val("1");

                $('span#DoNotReleaseModalTitle').text('Do Not Release');
            }
            else {
                $('#DoNotReleaseAction').val("0");
                $('span#DoNotReleaseModalTitle').text('Resume from Do Not Release');
            }

            $('#DoNotReleaseComment').val('');
        }

        var ClearValueOrderDoNotReleaseModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            $('label[for=DoNotReleaseComment]').css("margin-top", "28px");

            this.$element.on('show.bs.modal', function () {
                var keys = $(this).data("bs.modal").getKeys();
                setup(_doNotReleaseInfo.doNotReleaseAction);
                $(this).find('#DoNotReleaseComment').val('');

            }).on('shown.bs.modal', function () {
                $(this).find('#DoNotReleaseComment').focus();
            });
        };

        $('#DoNotReleaseComment').on('change', function () {
            $(this).val($(this).val().replaceAll('<', ' ['));
            $(this).val($(this).val().replaceAll('>', '] '));
        });

        ClearValueOrderDoNotReleaseModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueOrderDoNotReleaseModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        // NOT supporting relatedTarget - too many values to initialize and support show without adding methods - hence modal toggle not available
        ClearValueOrderDoNotReleaseModal.prototype.show = function (keys, DoNotReleaseAction) {
            _doNotReleaseInfo = new _DoNotReleaseInfo(DoNotReleaseAction);
            this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueOrderDoNotReleaseModal.prototype.save = function () {
            var DoNotReleaseModal = this;
            var DoNotReleaseModalElement = this.$element;
            var orderKeys = this.getKeys();

            var action = $('#DoNotReleaseAction').val();
            if (action == "1")
                DoNotReleaseOrders(DoNotReleaseModal, DoNotReleaseModalElement, orderKeys);
            else
                releaseOrders(DoNotReleaseModal, DoNotReleaseModalElement, orderKeys);
        };

        var old = $.fn.clearvalueorderDoNotReleaseModal;

        $.fn.clearvalueorderDoNotReleaseModal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                    data = $this.data('bs.modal'),
                    options = $.extend({}, ClearValueOrderDoNotReleaseModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueOrderDoNotReleaseModal(this, options)));
                }
                if (typeof option === 'string')
                    data[option](_relatedTarget);
                else if (options.show)
                    data.show(_relatedTarget);
            });
        };

        $.fn.clearvalueorderDoNotReleaseModal.Constructor = ClearValueOrderDoNotReleaseModal;

        $.fn.clearvalueorderDoNotReleaseModal.noConflict = function () {
            $.fn.clearvalueorderDoNotReleaseModal = old;
            return this;
        };

        function DoNotReleaseOrders(DoNotReleaseModal, DoNotReleaseModalElement, orderKeys) {
            DoNotReleaseModalElement.find('#btnProcessDoNotRelease').prop('disabled', true);

            var form = DoNotReleaseModalElement.find('#frmDoNotreleaseSubmit')[0];
            var valid = form.checkValidity();
            DoNotReleaseModalElement.find('#btnProcessDoNotRelease').prop('disabled', false);

            if (!valid) {
                form.reportValidity();
                return;
            }
            _doNotReleaseInfo.doNotReleaseComment = DoNotReleaseModalElement.find('#DoNotReleaseComment').val();

            var url = '/Orders/Items/UserActions/DoNotRelease';
            var wrapper = { orderKeys: orderKeys, doNotRelease: _doNotReleaseInfo.doNotReleaseAction, doNotReleaseComment: _doNotReleaseInfo.doNotReleaseComment };
            spinnerOn();
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
                .done(function (results) {
                    //hide before showing result modal to keep the default button correct
                    DoNotReleaseModal.hide();
                    showResultModal("Do Not Release Results", "Do Not release [total] item(s).", results);
                     $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
            $('#statusTabContent').load('/Orders/4865952/Items/1/StatusHistory');
            $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    spinnerOff();
                    handleException(jqXHR, textStatus, errorThrown);
                })
                .always(function () {
                    spinnerOff();
                });
        }

        function releaseOrders(DoNotReleaseModal, DoNotReleaseModalElement, orderKeys) {
            _doNotReleaseInfo.doNotReleaseComment = DoNotReleaseModalElement.find('#DoNotReleaseComment').val();
           var url = '/Orders/Items/UserActions/DoNotRelease';
            var wrapper = { orderKeys: orderKeys, doNotRelease: _doNotReleaseInfo.doNotReleaseAction, doNotReleaseComment: _doNotReleaseInfo.doNotReleaseComment};
            spinnerOn();
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                data: JSON.stringify(wrapper),
                contentType: "application/json",
                dataType: 'json'
            })
                .done(function (results) {
                    //hide before showing result modal to keep the default button correct
                    DoNotReleaseModal.hide();
                    showResultModal("Resume from Do Not Release", "[total] item(s) resumed from Do Not Release.", results);
                      $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
            $('#statusTabContent').load('/Orders/4865952/Items/1/StatusHistory');
            $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    spinnerOff();
                    handleException(jqXHR, textStatus, errorThrown);
                })
                .always(function () {
                    spinnerOff();
                });
        }
    })(jQuery);

    $(document).ready(function () {
        $('#DoNotRelease').clearvalueorderDoNotReleaseModal();
    });
					</script>



					<!-- Review Modal -->
					<div id="reviewModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="Review Status"
						aria-hidden="true">
						<div class="modal-dialog modal-lg">
							<div class="modal-content">
								<div class="modal-header">
									<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
									<span id="reviewModelHeader" class="modal-title">Escalate This Order Item To Management</span>
								</div>
								<div class="modal-body">
									<form id="frmReviewSubmit" class="form-horizontal">
										<div id="originalReviewCommentSection" class="row text-right">
											<label class="control-label col-md-3" for="originalReviewComment">Escalation Comment:</label>
											<div class="controls col-md-9">
												<textarea class="form-control" cols="20" id="originalReviewComment" maxlength="2000" name="originalReviewComment" rows="4" style="resize: none;">
</textarea>
											</div>

										</div>

										<div class="row text-right mt-3">
											<label class="control-label col-md-3" for="reviewComment">Escalation Comment:</label>
											<div class="controls col-md-9">
												<textarea class="form-control" cols="20" id="reviewComment" maxlength="2000" name="reviewComment" rows="4" style="resize: none;">
</textarea>
											</div>

										</div>

										<div class="row text-right mt-3" id="reviewReasonSection">
											<label class="control-label col-md-3" for="reviewReason">Reason:</label>
											<div class="controls col-md-5">
												<select class="form-control" id="reviewReason" name="reviewReason" required="required"><option value="">(Choose a Reason)</option>
<option value="ACCESS-CONTACT">An access contact or lock box code is required.</option>
<option value="APPRAISAL-MAILING">Appraisal Must be Mailed to Borrower</option>
<option value="BAD-COST-CENTER">Order Placed with Unknown Cost Center</option>
<option value="CLIENT-HOLD">Client Account Was Placed on Hold</option>
<option value="DUE-DATE-DECLINED">Request for Due Date Change Declined</option>
<option value="DUPLICATE">Item is a Potential Duplicate</option>
<option value="FEE-ADJ-DECLINED">Request for Fee Increase Declined</option>
<option value="FEE-ADJ-REQUIRED">Requires Client Fee Adjustment</option>
<option value="FEE-ASSIGN-BELOW">Request to Assign Below Client Minimum Fee</option>
<option value="FEE-QUOTE">Client Fee Quote Requested</option>
<option value="ORDER-APPROVAL">Order Requires Approval</option>
<option value="OTHER">Other</option>
<option value="PARTIAL-PMT-HIGH">Supplied Partial Payment Amount Exceeds Client Fee</option>
<option value="PAYMENT-ERROR">Credit Card/ACH Processing Exception</option>
<option value="PCR-REVIEW">Requires PCR Eligibility  Review</option>
<option value="SUSPECT-INSTRUCTIONS">Order has Questionable Access Instructions</option>
<option value="TERMS-APPROVAL">Requires Vendor Fee or Timeline Approval</option>
<option value="UNKNOWN-ADDRESS">Order has an Ambiguous Address</option>
</select>
											</div>

										</div>

										<div class="row text-right mt-3" id="reviewMultipleReasonsSection">
											<label class="control-label col-md-3" for="reviewReasonMultipleItems">Reason:</label>
											<div class="controls col-md-5">
												<select class="form-control" id="reviewReasonMultipleItems" name="reviewReasonMultipleItems"><option selected="selected" value="Multiple Reasons">Multiple Reasons</option>
</select>
											</div>

										</div>
									</form>
								</div>
								<div class="modal-footer">
									<button id="btnProcessEscalation" class="btn btn-default" OnClick="$('#reviewModal').data('bs.modal').save(); return false;">Escalate</button>
									<button class="btn btn-default" data-dismiss="modal">Cancel</button>
								</div>

								<input id="needsReview" name="needsReview" type="hidden" value="" />
		</div>
							</div>
						</div>
						<!-- /Review Modal -->

						<script type="text/javascript">
							function ReviewInfo(needsReview, reviewReason, reviewComment, initialComment) {
    	this.NeedsReview = (needsReview === undefined ? false : needsReview);
    	this.SupervisoryReviewReasonID = (reviewReason === undefined ? '' : reviewReason);
        this.SupervisoryReviewComment = (reviewComment === undefined ? '' : reviewComment);
        this.InitialComment = (initialComment === undefined ? '' : initialComment);
	};

	function setupModalHeader(keys, reviewInfo)
	{
		if (reviewInfo.NeedsReview && keys.length > 1)
			$('#reviewModelHeader').text("Escalate Multiple Order Items To Management");
		else if (!reviewInfo.NeedsReview && keys.length > 1)
			$('#reviewModelHeader').text("Resolve Escalation For Multiple Order Items");
		else if (reviewInfo.NeedsReview)
			$('#reviewModelHeader').text("Escalate This Order Item To Management");
		else
			$('#reviewModelHeader').text("Resolve Escalation For this Order Item");
	}

	function setupForEscalation()
	{
		$('#btnProcessEscalation').text("Escalate");
		$('#reviewReason').attr('disabled', false);
		$('#reviewReason').attr('required', true);
		$('#originalReviewCommentSection').hide();
		$('#reviewReasonSection').show();
		$('#reviewMultipleReasonsSection').hide();
		$('label[for="reviewComment"]').text("Escalation Comment:");
	}

	function setupForResolvingEscalation(keys, reviewInfo)
	{
		if (keys.length > 1)
		{
			$('#reviewReasonMultipleItems').attr('disabled', true);
			$('#reviewMultipleReasonsSection').show();
			$('#reviewReasonSection').hide();

			$('#originalReviewComment').text('');
			$('#originalReviewCommentSection').hide();
		}
		else
		{
			$('#reviewReason').val(reviewInfo.SupervisoryReviewReasonID);
			$('#reviewReason').attr('disabled', true);
			$('#reviewReasonSection').show();
			$('#reviewMultipleReasonsSection').hide();

			$('#originalReviewComment').text(reviewInfo.SupervisoryReviewComment);
			$('#originalReviewCommentSection').show();
			$('#originalReviewComment').attr('disabled', true);
		}

		$('label[for="reviewComment"]').text("Resolution Comment:");
		$('#btnProcessEscalation').text("Resolve Escalation");
		$('#reviewReason').attr('required', false);
	}

    // ClearValueOrderReviewModal : ClearValueModal
    (function ($) {
        'use strict';

        var _parent = $.fn.clearvaluemodal;
        var _reviewInfo = new ReviewInfo();

        var ClearValueOrderReviewModal = function (element, options) {
        	_parent.Constructor.apply(this, arguments);

        	this.$element.on('show.bs.modal', function () {
        		$(this).find('#needsReview').val(_reviewInfo.NeedsReview);
        		$(this).find('#reviewReason').val(_reviewInfo.SupervisoryReviewReasonID);
                $(this).find('#originalReviewComment').val(_reviewInfo.SupervisoryReviewComment);
                $(this).find('#reviewComment').val(_reviewInfo.InitialComment);

        		var keys = $(this).data("bs.modal").getKeys();

        		setupModalHeader(keys, _reviewInfo);

        		if (_reviewInfo.NeedsReview)
        			setupForEscalation(_reviewInfo);
        		else
        			setupForResolvingEscalation(keys, _reviewInfo);

        	}).on('shown.bs.modal', function () {
        		$(this).find('#reviewComment').focus();
        	});
        };

        ClearValueOrderReviewModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueOrderReviewModal.prototype.clearvaluemodalparent = function () {
        	var args = $.makeArray(arguments),
        	    method = args.shift();
        	_parent.Constructor.prototype[method].apply(this, args)
        };

    	// NOT supporting realtedTarget - too many values to initialize and support show without adding methods - hence modal toggle not available
        ClearValueOrderReviewModal.prototype.show = function (keys, needsReview, comment, reason, initialComment) {
        	_reviewInfo = new ReviewInfo();
        	_reviewInfo.NeedsReview = needsReview;
        	_reviewInfo.SupervisoryReviewComment = comment;
            _reviewInfo.SupervisoryReviewReasonID = reason;
            _reviewInfo.InitialComment = initialComment;

        	this.clearvaluemodalparent('show', null, keys);
        };

        ClearValueOrderReviewModal.prototype.save = function () {
        	$('#btnProcessEscalation').prop('disabled', true);

        	var form = $('#frmReviewSubmit')[0];
        	$('#reviewReason').blur();
        	var valid = form.checkValidity();
        	$('#btnProcessEscalation').prop('disabled', false);

        	if (!valid)
			{	
        		form.reportValidity();
        		return;
        	}

        	_reviewInfo.NeedsReview = this.$element.find('#needsReview').val();
        	_reviewInfo.SupervisoryReviewReasonID = this.$element.find('#reviewReason').val();
        	_reviewInfo.SupervisoryReviewComment = this.$element.find('#reviewComment').val();

        	var reviewModal = this;
        	var $reviewModalElement = this.$element;

        	var orderKeys = this.getKeys();
        	var url = _baseUrl + 'Orders/SetReviewStatus';
        	var wrapper = { orderKeys: orderKeys, reviewInfo: _reviewInfo };
        	spinnerOn();
        	$.ajax({
        		url: url,
        		type: 'POST',
        		cache: false,
        		data: JSON.stringify(wrapper),
        		contentType: "application/json",
        		dataType: 'json'
        	})
        	.done(function (results) {
        	    //hide before showing result modal to keep the default button correct
        		reviewModal.hide();
        		if (_reviewInfo.NeedsReview == 'true')
        			showResultModal("Order Items Escalation Results", "[total] order item(s) were escalated successfully.", results);
        		else
        			showResultModal("Order Items Escalation Results", "[total] order item(s) were resolved successfully.", results);

        	    $reviewModalElement.trigger('done.cvc.bs.modal');
        	})
        	.fail(function (jqXHR, textStatus, errorThrown) {
        	    spinnerOff();
        	    handleException(jqXHR, textStatus, errorThrown);
        	})
        	.always(function () {
        	    spinnerOff();
        	});
        };

        var old = $.fn.clearvalueorderreviewmodal;

        $.fn.clearvalueorderreviewmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueOrderReviewModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueOrderReviewModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvalueorderreviewmodal.Constructor = ClearValueOrderReviewModal;

        $.fn.clearvalueorderreviewmodal.noConflict = function () {
            $.fn.clearvalueorderreviewmodal = old;
            return this;
        };

    })(jQuery);

    $(document).ready(function () {
        $('#reviewModal').clearvalueorderreviewmodal();
    });

						</script>

						<div id="orderItemTabs" class="col-md-12" style="margin-bottom: 15px;">
							<ul class="nav nav-tabs" style="background-color: white;">
								<li id="statusTab" class="active" style="position: relative">
									<a data-toggle="tab" href="#statusTabContent">Status History</a>
								</li>
								<li id="datesTab" style="position: relative;">
									<a data-toggle="tab" href="#datesTabContent">Important Dates</a>
								</li>
								<li id="documentsTab" style="position: relative;">
									<a data-toggle="tab" href="#documentsTabContent">Documents</a>
								</li>
								<li id="correctionsTab" style="position: relative;" class="hidden">
									<a data-toggle="tab" href="#correctionsTabContent">Corrections</a>
								</li>
								<li id="thirdPartyQCTab" style="position: relative;" class="hidden">
									<a data-toggle="tab" href="#thirdPartyQCTabContent">Third Party QC</a>
								</li>
								<li id="UCDPTab" style="position: relative;" class="">
									<a data-toggle="tab" href="#UCDPTabContent" style="">
										<img class="hidden" src="/Content/images/alert.gif">
										<div style="">UCDP/EAD</div>
									</a>
								</li>
								<li id="instructionTab" style="position: relative;" class="hidden">
									<a data-toggle="tab" href="#instructionTabContent" style="">
										<img class="hidden" src="/Content/images/alert.gif">
										<div style="">Instructions</div>
									</a>
								</li>
								<li id="feesTab" style="position: relative;">
									<a data-toggle="tab" href="#feesTabContent">Fees</a>
								</li>
								<li id="paymentsTab" style="position: relative;">
									<a data-toggle="tab" href="#paymentsTabContent">Payments</a>
								</li>
								<li id="notificationsTab" style="position: relative;">
									<a data-toggle="tab" href="#notificationsTabContent">Notifications</a>
								</li>
								<li id="attributesTab" style="position: relative;" class="hidden">
									<a data-toggle="tab" href="#attributesTabContent">Attributes</a>
								</li>
								<li id="assignmentTab" style="position: relative;" class="">
									<a data-toggle="tab" href="#assignmentTabContent">Assignment History</a>
								</li>
								<li id="valueTab" style="position: relative;">
									<a data-toggle="tab" href="#valueTabContent" style="color:red;">Value History</a>
								</li>
								<li id="peopleTab" style="position: relative;">
									<a data-toggle="tab" href="#peopleTabContent">People</a>
								</li>
								<li id="auditTab" style="position: relative;">
									<a data-toggle="tab" href="#auditTabContent">Audit</a>
								</li>
								<li id="siblingsTab" style="position: relative;">
									<a data-toggle="tab" href="#siblingsTabContent">Sibling Items</a>
								</li>
								<li id="historyTab" style="position: relative;">
									<a data-toggle="tab" href="#historyTabContent">Change History</a>
								</li>
								<li id="escalationsTab" style="position: relative;">
									<a data-toggle="tab" href="#escalationsTabContent" style="">
										<img class="hidden" src="/Content/images/alert.gif">
										<div style="">Escalations</div>
									</a>
								</li>
							</ul>

							<div class="tab-content"
								style="border-right: 1px solid #ddd; border-left: 1px solid #ddd; border-bottom: 1px solid #ddd;border-top: 0px; overflow: hidden;">
								<div id="statusTabContent" class="clearfix tab-pane fade in active"
									data-url="StatusHistory">

									<div class="tab-loading" style="position: relative; display: none;"
										onclick="return false;">
										<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


									</div>
									<div id="datesTabContent" class="clearfix tab-pane fade" data-url="Dates">

										<div class="tab-loading" style="position: relative; display: none;"
											onclick="return false;">
											<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


										</div>
										<div id="documentsTabContent" class="clearfix tab-pane fade"
											data-url="Documents">

											<div class="tab-loading" style="position: relative; display: none;"
												onclick="return false;">
												<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


											</div>
											<div id="correctionsTabContent" class="clearfix tab-pane fade"
												data-url="Corrections">

												<div class="tab-loading" style="position: relative; display: none;"
													onclick="return false;">
													<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


												</div>
												<div id="thirdPartyQCTabContent" class="clearfix tab-pane fade"
													data-url="ThirdPartyQC">

													<div class="tab-loading" style="position: relative; display: none;"
														onclick="return false;">
														<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


													</div>
													<div id="UCDPTabContent" class="clearfix tab-pane fade"
														data-url="UCDP">

														<div class="tab-loading"
															style="position: relative; display: none;"
															onclick="return false;">
															<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


														</div>
														<div id="instructionTabContent" class="clearfix tab-pane fade"
															data-url="Instructions">

															<div class="tab-loading"
																style="position: relative; display: none;"
																onclick="return false;">
																<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


															</div>
															<div id="feesTabContent" class="clearfix tab-pane fade"
																data-url="Fees">

																<div class="tab-loading"
																	style="position: relative; display: none;"
																	onclick="return false;">
																	<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																</div>
																<div id="paymentsTabContent"
																	class="clearfix tab-pane fade" data-url="Payments">

																	<div class="tab-loading"
																		style="position: relative; display: none;"
																		onclick="return false;">
																		<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																	</div>
																	<div id="notificationsTabContent"
																		class="clearfix tab-pane fade"
																		data-url="Notifications">

																		<div class="tab-loading"
																			style="position: relative; display: none;"
																			onclick="return false;">
																			<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																		</div>
																		<div id="attributesTabContent"
																			class="clearfix tab-pane fade"
																			data-url="Attributes">

																			<div class="tab-loading"
																				style="position: relative; display: none;"
																				onclick="return false;">
																				<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																			</div>
																			<div id="assignmentTabContent"
																				class="clearfix tab-pane fade"
																				data-url="AssignmentHistory">

																				<div class="tab-loading"
																					style="position: relative; display: none;"
																					onclick="return false;">
																					<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																				</div>
																				<div id="valueTabContent"
																					class="clearfix tab-pane fade"
																					data-url="ValueHistory">

																					<div class="tab-loading"
																						style="position: relative; display: none;"
																						onclick="return false;">
																						<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																					</div>
																					<div id="peopleTabContent"
																						class="clearfix tab-pane fade"
																						data-url="People">

																						<div class="tab-loading"
																							style="position: relative; display: none;"
																							onclick="return false;">
																							<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																						</div>
																						<div id="auditTabContent"
																							class="clearfix tab-pane fade"
																							data-url="Audit">

																							<div class="tab-loading"
																								style="position: relative; display: none;"
																								onclick="return false;">
																								<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																							</div>
																							<div id="siblingsTabContent"
																								class="clearfix tab-pane fade"
																								data-url="SiblingItems">

																								<div class="tab-loading"
																									style="position: relative; display: none;"
																									onclick="return false;">
																									<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																								</div>
																								<div id="historyTabContent"
																									class="clearfix tab-pane fade"
																									data-url="ChangeHistory">

																									<div class="tab-loading"
																										style="position: relative; display: none;"
																										onclick="return false;">
																										<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																									</div>
																									<div id="extendedFieldsTabContent"
																										class="clearfix tab-pane fade"
																										data-url="ExtendedFields">

																										<div class="tab-loading"
																											style="position: relative; display: none;"
																											onclick="return false;">
																											<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																										</div>
																										<div id="escalationsTabContent"
																											class="clearfix tab-pane fade"
																											data-url="Escalations">

																											<div class="tab-loading"
																												style="position: relative; display: none;"
																												onclick="return false;">
																												<img src="/Content/Images/loading_squares.gif" alt="" />
</div>


																											</div>
																										</div>
																									</div>

																									<script
																										type="text/javascript">
																										$(document).ready(function () {

		$('#routeModal').clearvalueroutemodal();

		$('#acceptModal, #conditionalAcceptModal, #declineModal, #routeModal, #cancelModal, #checkoutModal, #extendOrderItemDueDateModal, #holdModal, #reviewModal').on('done.cvc.bs.modal', function (modal) {
		    $('#status_history').trigger("reloadGrid");
		    $('#orderItemSummaryDiv').load('/Orders/4865952/Items/1/Summary');
		    $('#orderItemButtonsDiv').load('/Orders/4865952/Items/1/Buttons');
        });

        $('#extendOrderItemDueDateModal').on('done.cvc.bs.modal', function (modal) {
            if ($('#payments').length > 0)
                $('#paymentsTabContent').load('/Orders/4865952/Items/1/Payments');
            $('#documents').trigger('reloadGrid');
	    });

    	$("#statusTabContent").load("/Orders/4865952/Items/1/StatusHistory");
    	initUserLock();

    	$('#orderItemTabs a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
    		var target = $(e.target).attr("href");
    		loadTab(target, "/Orders/4865952/Items/1/" + $(target).data("url"));
    	});

        $(window).bind('resize', function () { resizeTabPanel(); });
        $(window).resize();

        $('#orderItemTabs a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            var target = $(e.target).attr("href");
            $(target).trigger('parentResize.cvc');
        });
    });

    function loadTab(target, subPageURL)
    {
    	var containsTabLoader = $(target).find('.tab-loading').length > 0;
    	if (containsTabLoader)
    		$(target).load(subPageURL);
    }

    function resizeTabPanel() {

        // set the searchContent div height
        var headerHeight = $("div#header").outerHeight(true);
        var navbarHeight = $("div#navBar").outerHeight(true);
        var footerHeight = $("div#footer").outerHeight(true);
        var warningHeight = $("div#warnings").outerHeight(true);
        var userLockHeight = $("div#userlock").outerHeight(true);
        var summaryHeight = $('.order-item-summary').outerHeight(true);
        var actionButtons = $('div#actionButtons').outerHeight(true);

        var newHeight = $(this).innerHeight() - (headerHeight + navbarHeight + footerHeight + warningHeight + userLockHeight + summaryHeight + actionButtons);
        $("div#orderItemTabs").outerHeight(newHeight, true);

        var tabHeight = $('div#orderItemTabs ul.nav-tabs').outerHeight(true);
        var availableHeight = $("div#orderItemTabs").innerHeight();
        var newHeight = availableHeight - tabHeight;


        $('div#orderItemTabs div.tab-content').outerHeight(newHeight, true);
        $('div#orderItemTabs .tab-pane').outerHeight($('div#orderItemTabs div.tab-content').innerHeight(), true);
        $('div#orderItemTabs .tab-pane').trigger('parentResize.cvc');
    }

    function initUserLock() {
        var oEdit = $.connection.orderEditLock;
        $.connection.hub.qs = { 'groupName': '4865952.1', 'userName': 'SLambu', 'objectType': 'Order Item', 'master': 'True' };

        $.connection.hub.start().done(function () {
            $("#btnRelease").click(function () {
                oEdit.server.unlockOrder('Order Item', '4865952.1');
            });
            $("#btnLock").click(function () {
                oEdit.server.lockOrderToUser('Order Item', '4865952.1');
            });
        });

        $.connection.hub.disconnected(function () {
            setTimeout(function () {
                $.connection.hub.start();
            }, 5000); // Restart connection after 5 seconds.
        });

        oEdit.client.addNewMessageToPage = function (message) {
            $('#userlock .lock-status').text(message);
        };

        oEdit.client.lockOrder = function (message) {
            $('#btnLock').prop('disabled', message);
            if (message) {
                $('#userlock').removeClass("alert-success");
                $('#userlock').addClass("alert-danger");
            }
            else {
                $('#userlock').removeClass("alert-danger");
                $('#userlock').addClass("alert-success");
            }
        };

        oEdit.client.releaseOrder = function (message) {
            $('#btnRelease').prop('disabled', !message);
        }
    }

																									</script>


																									<div id="resultModal"
																										class="modal order-grid-modal"
																										tabindex="-1"
																										role="dialog"
																										aria-labelledby="Results"
																										aria-hidden="true">
																										<div
																											class="modal-dialog modal-lg">
																											<div
																												class="modal-content">
																												<div
																													class="modal-header">
																													<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
																													<span id="resultTitle">Order Item{s}</span>
																												</div>
																												<div class="modal-body"
																													style="font-size: larger; max-height: 300px; overflow-x: auto; ">
																													<div id="successTextRow"
																														class="row">
																														<div
																															class="col-md-offset-1 col-md-11">
																															<span class="glyphicon glyphicon-ok-sign" style="color: green; margin-right: 10px;"></span>
																															<span id="successText">
                        </span>
																														</div>
																													</div>
																													<div class="row"
																														style="margin-top: 10px;">
																														<div
																															class="col-md-offset-1 col-md-11">
																															<ul id="failList"
																																style="list-style: none;">
																															</ul>
																														</div>
																													</div>
																												</div>
																												<div
																													class="modal-footer">
																													<button class="btn btn-default modal-enter-button enter-button" data-dismiss="modal">OK</button>
																												</div>
																											</div>
																										</div>
																									</div>


																									<script
																										type="text/javascript">
																										function showResultModal(title, successText, results, alwaysShow) {
        if (alwaysShow === undefined)
            alwaysShow = false;

        var successTotal = 0;
        var failsTotal = 0;
        for (var i = 0; i < results.length; i++) {
            if (results[i].Success) successTotal++;
            else failsTotal++;
        }

        if (successTotal == 1 && failsTotal == 0 && !alwaysShow)
            return;


        $("#resultModal #resultTitle").text(title);
        if (scrub(successText) == '' || successTotal == 0)
            $('#resultModal #successTextRow').hide();
        else {
            $('#resultModal #successTextRow').show();
            $("#resultModal #successText").text(successText.replaceAll('[total]', successTotal));
        }
        $('#resultModal #failList li').remove();
        for (var i = 0; i < results.length; i++) {
            if (!results[i].Success) {
                if (results[i].Message) {
                    $('#resultModal #failList').append('<li><table class="layout"><tr><td><span class="glyphicon glyphicon-remove-sign" style="color: red; margin-right: 10px;"></span></td><td><span>' + scrub(results[i].Message) + '</span></td></tr></table></li>');
                }
                else if (results[i].ErrorMessage) {
                    $('#resultModal #failList').append('<li><table class="layout"><tr><td><span class="glyphicon glyphicon-remove-sign" style="color: red; margin-right: 10px;"></span></td><td><span>' + scrub(results[i].ErrorMessage) + '</span></td></tr></table></li>');
                }
            }
        }
        $('#resultModal').clearvaluemodal('show');
    }

																									</script>

																									<div id="confirmActionModal"
																										class="modal"
																										tabindex="-1"
																										role="dialog"
																										aria-labelledby="Confirm Anything"
																										aria-hidden="true">
																										<div
																											class="modal-dialog modal-sm">
																											<div
																												class="modal-content">
																												<div
																													class="modal-header">
																													<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
																													<span class="modal-title" id="confirmActionModalTitle">Confirm</span>
																												</div>
																												<div
																													class="modal-body">
																													<div
																														class="form-group">
																														<div class="col-md-offset-3 col-md-9"
																															style="color: red;">
																															<div
																																class="validation-summary-errors">
																																<ul>
																																</ul>
																															</div>
																														</div>
																													</div>
																													<div
																														id="confirmMessage">
																														Are
																														you
																														sure
																														you
																														want
																														to
																														perform
																														this
																														action?
																													</div>
																												</div>
																												<div
																													class="modal-footer">
																													<button id="btnconfirmActionModal" class="btn btn-default modal-enter-button enter-button" data-dismiss="modal">Yes</button>
																													<button class="btn btn-default" data-dismiss="modal">No</button>
																												</div>
																											</div>
																										</div>
																									</div>

																									<script
																										type="text/javascript">
																										function showConfirmActionModal(title, confirmationMessage, returningFunction, id) {

        $('#confirmActionModalTitle').text((title) ? title : 'Confirm');

        $('#confirmMessage').text((confirmationMessage) ? confirmationMessage : "Are you sure you want to perform this action?")

        $('#btnconfirmActionModal').unbind().on('click', function () {
            window[returningFunction](id);  // If the function is in a seporate name space this will not work unless modified
        }); 

        $('#confirmActionModal').clearvaluemodal('show');
    }

																									</script>
																								</div>




																								<div id="footer">
																									<table
																										class="tableFooter">
																										<tr
																											style="height: 25px">
																											<td
																												style="width: 15px">
																											</td>
																											<td>
																												<img src="/Content/images/CVC.png" style="vertical-align: middle; border: none; width: 17px; height: 16px" /><span class="Copyright"> Copyright &copy; 2022 ClearValue Consulting Inc.</span>
																											</td>
																											<td></td>
																										</tr>
																									</table>
																								</div>






																								<!--

    Example of user:

    $('#alertModal').data('bs.modal').show('A workflow activity is a set of conditionally executed operations that impact the processing of an order.', 'Workflow Activity', '#addActivityID', '/Content/Images/arrow_branch.png")');
-->


																								<div id="alertModal"
																									class="modal"
																									tabindex="-1"
																									role="dialog"
																									aria-labelledby="Comment"
																									aria-hidden="true">
																									<div
																										class="modal-dialog">
																										<div
																											class="modal-content">
																											<div
																												class="modal-header">
																												<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
																												<span class="modal-title">Alert</span>
																											</div>
																											<div
																												class="modal-body">
																												<div
																													class="form-group clearfix">
																													<div id="alertImage"
																														class="col-md-1 text-right">
																														<img alt="" src="" />
                    </div>
																														<div id="alertMessage"
																															class="col-md-11">
																														</div>
																													</div>
																												</div>
																												<div
																													class="modal-footer">
																													<button class="btn btn-default modal-enter-button enter-button" data-dismiss="modal">OK</button>
																												</div>
																											</div>
																										</div>
																									</div>

																									<script
																										type="text/javascript">
																										// ClearValueAlertModal : ClearValueModal
    (function ($) {
        'use strict';

        var _title = 'Alert';
        var _message = '';
        var _imageUrl = '';
        var _wide = '';
        var _afterHideElementSelector = null;

        var _parent = $.fn.clearvaluemodal;

        var ClearValueAlertModal = function (element, options) {
            _parent.Constructor.apply(this, arguments);

            this.$element.on('show.bs.modal', function () {
                $(this).find('.modal-title').text(_title);

                $(this).find('#alertMessage').removeClass('col-md-11');
                $(this).find('#alertMessage').removeClass('col-md-12');
                if (_imageUrl && _imageUrl !== '') {
                    $(this).find('#alertImage').show();
                    $(this).find('#alertImage img').attr('src', _imageUrl);
                    $(this).find('#alertMessage').addClass('col-md-11');
                }
                else {
                    $(this).find('#alertImage').hide();
                    $(this).find('#alertMessage').addClass('col-md-12');
                }

                $(this).find('.modal-dialog').removeClass('modal-lg');
                $(this).find('.modal-dialog').removeClass('modal-sm');
                if (_wide == 'lg')
                    $(this).find('.modal-dialog').addClass('modal-lg');
                else if (_wide == 'sm')
                    $(this).find('.modal-dialog').addClass('modal-sm');

                $(this).find('#alertMessage').html(_message);
            }).on('hidden.bs.modal', function () {
                if (_afterHideElementSelector)
                    $(_afterHideElementSelector).focus();
            });
        };

        ClearValueAlertModal.prototype = $.extend({}, _parent.Constructor.prototype);

        ClearValueAlertModal.prototype.clearvaluemodalparent = function () {
            var args = $.makeArray(arguments),
                method = args.shift();
            _parent.Constructor.prototype[method].apply(this, args)
        };

        // override show to pass message and or image
        // NOT supporting relatedTarget - too many values to initialize and support show without adding methods - hence modal toggle not available
        ClearValueAlertModal.prototype.show = function (message, title, focusElementSelector, imageUrl, wide) {
            if (title) _title = title;
            else _title = '';
            if (message) _message = message;
            else _message = '';
            if (imageUrl) _imageUrl = imageUrl;
            else _imageUrl = '';
            if (focusElementSelector) _afterHideElementSelector = focusElementSelector;
            else _afterHideElementSelector = null;
            if (wide) _wide = wide;
            else _wide = '';

            this.clearvaluemodalparent('show'); // no keys or related target
        };

        var old = $.fn.clearvaluealertmodal;

        $.fn.clearvaluealertmodal = function (option, _relatedTarget) {
            return this.each(function () {
                var $this = $(this),
                data = $this.data('bs.modal'),
                options = $.extend({}, ClearValueAlertModal.DEFAULTS, $this.data(), typeof option === 'object' && option);

                if (!data) {
                    $this.data('bs.modal', (data = new ClearValueAlertModal(this, options)));
                }
                if (typeof option === 'string') {
                    data[option](_relatedTarget);
                } else if (options.show) {
                    data.show(_relatedTarget);
                }
            });
        };

        $.fn.clearvaluealertmodal.Constructor = ClearValueAlertModal;

        $.fn.clearvaluealertmodal.noConflict = function () {
            $.fn.clearvaluealertmodal = old;
            return this;
        };

    })(jQuery);

    $(document).ready(function () {
        $('#alertModal').clearvaluealertmodal();
    });

																									</script>

</body>

</html>



<script type="text/javascript">
	try {
        WaitSetup();
    }
    catch (e) {
    }

    //Global variable containing the base url for the site
    var _baseUrl = '/';

    //Global variable that can be checked on any ajax error call
    //If the user is navigating away from a page don't display any ajax error messages
    var _isNavigating = false;
    var _isDownloading = false;

    $(window).on('load', function () {
        //$('body').css('cursor', 'default');
        _isNavigating = false;
        _isDownloading = false;
    });

    $(window).on('beforeunload', function () {
        //if (!_isDownloading) $('body').css('cursor', 'wait');
        _isNavigating = true;
    });

    $('body').keyup(function (e) {
        if (e.which == 13) {
            $('button.enter-button:not(:disabled):visible').trigger('click');
            return false;
        }
    });

    $(document).ready(function () {

        jQuery(function ($) {
            $.mask.definitions['#'] = '[0-9].';
            $("#eyescript").mask("~9.99 ~9.99 999");
        });

        $(".officePhone").mask("(999) 999-9999? x9999");
        $(".phone").mask("(999) 999-9999");
        $(".zip").mask("99999");
        $(".numbers1000000").mask("?9999999");
        $(".decimal").mask("?9999999");

        $('.officePhone').bind('paste', function () { $(this).val(''); })
        $('.phone').bind('paste', function () { $(this).val(''); });

        $('div.tab-loading').closest('.tab-pane').on('parentResize.cvc', function () {

                var $container = $(this).find('div.tab-loading');
                var $image = $($container).find('img');
                var totalH = $(this).innerHeight();
                var totalW = $(this).innerWidth();

                $container.show();
                var loadingH = $image.outerHeight();
                var loadingW = $image.outerWidth();

                var top = (totalH / 2) - (loadingH / 2);
                var left = (totalW / 2) - (loadingW / 2);

                $container.css('top', top + 'px');
                $container.css('left', left + 'px');
        });

        $('div.tab-loading').closest('.tab-pane').trigger('parentResize.cvc');
    });

    String.prototype.replaceAll = function (str1, str2, ignore) {
        return this.replace(new RegExp(str1.replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|\<\>\-\&])/g, "\\$&"), (ignore ? "gi" : "g")), (typeof (str2) == "string") ? str2.replace(/\$/g, "$$$$") : str2);
    };

    function SafeSubmit(button) {
        if (typeof (Page_ClientValidate) == 'function')
            if (Page_ClientValidate() == false)
                return false;

        if (button.getAttribute('type') == 'button')
            button.disabled = true;

        return true;
    }
</script>